;;; FLAGS: -dv
(module
  (func
    (i32.load (i32.const 0))
    (i32.load8_s (i32.const 0))
    (i32.load16_s (i32.const 0))
    (i32.load8_u (i32.const 0))
    (i32.load16_u (i32.const 0))
    (i64.load (i32.const 0))
    (i64.load8_s (i32.const 0))
    (i64.load16_s (i32.const 0))
    (i64.load32_s (i32.const 0))
    (i64.load8_u (i32.const 0))
    (i64.load16_u (i32.const 0))
    (i64.load32_u (i32.const 0))
    (f32.load (i32.const 0))
    (f64.load (i32.const 0))))
(;; STDOUT ;;;
0000000: 00                                         ; WASM_SECTION_MEMORY
0000001: 00                                         ; min mem size log 2
0000002: 00                                         ; max mem size log 2
0000003: 01                                         ; export mem
0000004: 01                                         ; WASM_SECTION_SIGNATURES
0000005: 01                                         ; num signatures
; function signature 0
0000006: 00                                         ; num args
0000007: 00                                         ; result_type
0000008: 02                                         ; WASM_SECTION_FUNCTIONS
0000009: 01                                         ; num functions
; function 0
000000a: 01                                         ; func flags
000000b: 0000                                       ; func signature index
000000d: 0000 0000                                  ; func name offset
0000011: 0000                                       ; func body size
0000013: 20                                         ; OPCODE_I32_LOAD_I32
0000014: 06                                         ; load access byte
0000015: 10                                         ; OPCODE_I8_CONST
0000016: 00                                         ; u8 literal
0000017: 20                                         ; OPCODE_I32_LOAD_I32
0000018: 04                                         ; load access byte
0000019: 10                                         ; OPCODE_I8_CONST
000001a: 00                                         ; u8 literal
000001b: 20                                         ; OPCODE_I32_LOAD_I32
000001c: 05                                         ; load access byte
000001d: 10                                         ; OPCODE_I8_CONST
000001e: 00                                         ; u8 literal
000001f: 20                                         ; OPCODE_I32_LOAD_I32
0000020: 00                                         ; load access byte
0000021: 10                                         ; OPCODE_I8_CONST
0000022: 00                                         ; u8 literal
0000023: 20                                         ; OPCODE_I32_LOAD_I32
0000024: 01                                         ; load access byte
0000025: 10                                         ; OPCODE_I8_CONST
0000026: 00                                         ; u8 literal
0000027: 21                                         ; OPCODE_I64_LOAD_I32
0000028: 07                                         ; load access byte
0000029: 10                                         ; OPCODE_I8_CONST
000002a: 00                                         ; u8 literal
000002b: 21                                         ; OPCODE_I64_LOAD_I32
000002c: 04                                         ; load access byte
000002d: 10                                         ; OPCODE_I8_CONST
000002e: 00                                         ; u8 literal
000002f: 21                                         ; OPCODE_I64_LOAD_I32
0000030: 05                                         ; load access byte
0000031: 10                                         ; OPCODE_I8_CONST
0000032: 00                                         ; u8 literal
0000033: 21                                         ; OPCODE_I64_LOAD_I32
0000034: 06                                         ; load access byte
0000035: 10                                         ; OPCODE_I8_CONST
0000036: 00                                         ; u8 literal
0000037: 21                                         ; OPCODE_I64_LOAD_I32
0000038: 00                                         ; load access byte
0000039: 10                                         ; OPCODE_I8_CONST
000003a: 00                                         ; u8 literal
000003b: 21                                         ; OPCODE_I64_LOAD_I32
000003c: 01                                         ; load access byte
000003d: 10                                         ; OPCODE_I8_CONST
000003e: 00                                         ; u8 literal
000003f: 21                                         ; OPCODE_I64_LOAD_I32
0000040: 02                                         ; load access byte
0000041: 10                                         ; OPCODE_I8_CONST
0000042: 00                                         ; u8 literal
0000043: 22                                         ; OPCODE_F32_LOAD_I32
0000044: 00                                         ; load access byte
0000045: 10                                         ; OPCODE_I8_CONST
0000046: 00                                         ; u8 literal
0000047: 23                                         ; OPCODE_F64_LOAD_I32
0000048: 00                                         ; load access byte
0000049: 10                                         ; OPCODE_I8_CONST
000004a: 00                                         ; u8 literal
0000011: 3800                                       ; FIXUP func body size
000004b: 06                                         ; WASM_SECTION_END
; names
0000000: 0000 0001 0101 0000 0201 0100 0000 0000  ................
0000010: 0038 0020 0610 0020 0410 0020 0510 0020  .8. ... ... ... 
0000020: 0010 0020 0110 0021 0710 0021 0410 0021  ... ...!...!...!
0000030: 0510 0021 0610 0021 0010 0021 0110 0021  ...!...!...!...!
0000040: 0210 0022 0010 0023 0010 0006            ..."...#....
;;; STDOUT ;;)
