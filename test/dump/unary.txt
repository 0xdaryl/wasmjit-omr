# FLAGS: -dv
(module
  (func
    (i32.not
      (i32.clz
        (i32.ctz
          (i32.popcnt (i32.const 0)))))

    (i64.clz
      (i64.ctz
        (i64.popcnt (i64.const 0))))

    (f32.neg
      (f32.abs
        (f32.sqrt
          (f32.ceil
            (f32.floor
              (f32.trunc
                (f32.nearest (f32.const 0))))))))

    (f64.neg
      (f64.abs
        (f64.sqrt
          (f64.ceil
            (f64.floor
              (f64.trunc
                (f64.nearest (f64.const 0))))))))))
# STDOUT:
0000000: 00                                         ; mem size log 2
0000001: 01                                         ; export mem
0000002: 0000                                       ; num globals
0000004: 0100                                       ; num funcs
0000006: 0000                                       ; num data segments
; function header 0
0000008: 00                                         ; func num args
0000009: 00                                         ; func result type
000000a: 0000 0000                                  ; func name offset
000000e: 0000 0000                                  ; func code start offset
0000012: 0000 0000                                  ; func code end offset
0000016: 0000                                       ; num local i32
0000018: 0000                                       ; num local i64
000001a: 0000                                       ; num local f32
000001c: 0000                                       ; num local f64
000001e: 00                                         ; export func
000001f: 00                                         ; func external
; function data 0
000000e: 2000 0000                                  ; FIXUP func code start offset
0000020: 03                                         ; OPCODE_BLOCK
0000021: 00                                         ; toplevel block num expressions
0000022: 5a                                         ; OPCODE_I32_NOT
0000023: 57                                         ; OPCODE_I32_CLZ
0000024: 58                                         ; OPCODE_I32_CTZ
0000025: 59                                         ; OPCODE_I32_POPCNT
0000026: 11                                         ; OPCODE_I32_CONST
0000027: 0000 0000                                  ; u32 literal
000002b: 72                                         ; OPCODE_I64_CLZ
000002c: 73                                         ; OPCODE_I64_CTZ
000002d: 74                                         ; OPCODE_I64_POPCNT
000002e: 12                                         ; OPCODE_I64_CONST
000002f: 0000 0000 0000 0000                        ; u64 literal
0000037: 7c                                         ; OPCODE_F32_NEG
0000038: 7b                                         ; OPCODE_F32_ABS
0000039: 82                                         ; OPCODE_F32_SQRT
000003a: 7e                                         ; OPCODE_F32_CEIL
000003b: 7f                                         ; OPCODE_F32_FLOOR
000003c: 80                                         ; OPCODE_F32_TRUNC
000003d: 81                                         ; OPCODE_F32_NEAREST
000003e: 14                                         ; OPCODE_F32_CONST
000003f: 0000 0000                                  ; f32 literal
0000043: 90                                         ; OPCODE_F64_NEG
0000044: 8f                                         ; OPCODE_F64_ABS
0000045: 96                                         ; OPCODE_F64_SQRT
0000046: 92                                         ; OPCODE_F64_CEIL
0000047: 93                                         ; OPCODE_F64_FLOOR
0000048: 94                                         ; OPCODE_F64_TRUNC
0000049: 95                                         ; OPCODE_F64_NEAREST
000004a: 13                                         ; OPCODE_F64_CONST
000004b: 0000 0000 0000 0000                        ; f64 literal
0000021: 04                                         ; FIXUP toplevel block num expressions
0000012: 5300 0000                                  ; FIXUP func code end offset
; names
0000000: 0001 0000 0100 0000 0000 0000 0000 2000  .............. .
0000010: 0000 5300 0000 0000 0000 0000 0000 0000  ..S.............
0000020: 0304 5a57 5859 1100 0000 0072 7374 1200  ..ZWXY.....rst..
0000030: 0000 0000 0000 007c 7b82 7e7f 8081 1400  .......|{.~.....
0000040: 0000 0090 8f96 9293 9495 1300 0000 0000  ................
0000050: 0000 00                                  ...
