# FLAGS: -dv
(module
  (func
    (i32.eq
      (i32.ne
        (i32.lt_s
          (i32.lt_u
            (i32.le_s
              (i32.le_u
                (i32.gt_s
                  (i32.gt_u
                    (i32.ge_s
                      (i32.ge_u
                        (i32.const 0)
                        (i32.const 0))
                      (i32.const 0))
                    (i32.const 0))
                  (i32.const 0))
                (i32.const 0))
              (i32.const 0))
            (i32.const 0))
          (i32.const 0))
        (i32.const 0))
      (i32.const 0))

    ;; all comparisons return i32, so these tests can't be chained like the one
    ;; above
    (i64.eq (i64.const 0) (i64.const 0))
    (i64.ne (i64.const 0) (i64.const 0))
    (i64.lt_s (i64.const 0) (i64.const 0))
    (i64.lt_u (i64.const 0) (i64.const 0))
    (i64.le_s (i64.const 0) (i64.const 0))
    (i64.le_u (i64.const 0) (i64.const 0))
    (i64.gt_s (i64.const 0) (i64.const 0))
    (i64.gt_u (i64.const 0) (i64.const 0))
    (i64.ge_s (i64.const 0) (i64.const 0))
    (i64.ge_u (i64.const 0) (i64.const 0))

    (f32.eq (f32.const 0) (f32.const 0))
    (f32.ne (f32.const 0) (f32.const 0))
    (f32.lt (f32.const 0) (f32.const 0))
    (f32.le (f32.const 0) (f32.const 0))
    (f32.gt (f32.const 0) (f32.const 0))
    (f32.ge (f32.const 0) (f32.const 0))

    (f64.eq (f64.const 0) (f64.const 0))
    (f64.ne (f64.const 0) (f64.const 0))
    (f64.lt (f64.const 0) (f64.const 0))
    (f64.le (f64.const 0) (f64.const 0))
    (f64.gt (f64.const 0) (f64.const 0))
    (f64.ge (f64.const 0) (f64.const 0))))
# STDOUT:
0000000: 00                                         ; mem size log 2
0000001: 01                                         ; export mem
0000002: 0000                                       ; num globals
0000004: 0100                                       ; num funcs
0000006: 0000                                       ; num data segments
; function header 0
0000008: 00                                         ; func num args
0000009: 00                                         ; func result type
000000a: 0000 0000                                  ; func name offset
000000e: 0000 0000                                  ; func code start offset
0000012: 0000 0000                                  ; func code end offset
0000016: 0000                                       ; num local i32
0000018: 0000                                       ; num local i64
000001a: 0000                                       ; num local f32
000001c: 0000                                       ; num local f64
000001e: 00                                         ; export func
000001f: 00                                         ; func external
; function data 0
000000e: 2000 0000                                  ; FIXUP func code start offset
0000020: 4d                                         ; OPCODE_I32_EQ
0000021: 4e                                         ; OPCODE_I32_NE
0000022: 4f                                         ; OPCODE_I32_SLT
0000023: 51                                         ; OPCODE_I32_ULT
0000024: 50                                         ; OPCODE_I32_SLE
0000025: 52                                         ; OPCODE_I32_ULE
0000026: 53                                         ; OPCODE_I32_SGT
0000027: 55                                         ; OPCODE_I32_UGT
0000028: 54                                         ; OPCODE_I32_SGE
0000029: 56                                         ; OPCODE_I32_UGE
000002a: 10                                         ; OPCODE_I8_CONST
000002b: 00                                         ; u8 literal
000002c: 10                                         ; OPCODE_I8_CONST
000002d: 00                                         ; u8 literal
000002e: 10                                         ; OPCODE_I8_CONST
000002f: 00                                         ; u8 literal
0000030: 10                                         ; OPCODE_I8_CONST
0000031: 00                                         ; u8 literal
0000032: 10                                         ; OPCODE_I8_CONST
0000033: 00                                         ; u8 literal
0000034: 10                                         ; OPCODE_I8_CONST
0000035: 00                                         ; u8 literal
0000036: 10                                         ; OPCODE_I8_CONST
0000037: 00                                         ; u8 literal
0000038: 10                                         ; OPCODE_I8_CONST
0000039: 00                                         ; u8 literal
000003a: 10                                         ; OPCODE_I8_CONST
000003b: 00                                         ; u8 literal
000003c: 10                                         ; OPCODE_I8_CONST
000003d: 00                                         ; u8 literal
000003e: 10                                         ; OPCODE_I8_CONST
000003f: 00                                         ; u8 literal
0000040: 68                                         ; OPCODE_I64_EQ
0000041: 12                                         ; OPCODE_I64_CONST
0000042: 0000 0000 0000 0000                        ; u64 literal
000004a: 12                                         ; OPCODE_I64_CONST
000004b: 0000 0000 0000 0000                        ; u64 literal
0000053: 69                                         ; OPCODE_I64_NE
0000054: 12                                         ; OPCODE_I64_CONST
0000055: 0000 0000 0000 0000                        ; u64 literal
000005d: 12                                         ; OPCODE_I64_CONST
000005e: 0000 0000 0000 0000                        ; u64 literal
0000066: 6a                                         ; OPCODE_I64_SLT
0000067: 12                                         ; OPCODE_I64_CONST
0000068: 0000 0000 0000 0000                        ; u64 literal
0000070: 12                                         ; OPCODE_I64_CONST
0000071: 0000 0000 0000 0000                        ; u64 literal
0000079: 6c                                         ; OPCODE_I64_ULT
000007a: 12                                         ; OPCODE_I64_CONST
000007b: 0000 0000 0000 0000                        ; u64 literal
0000083: 12                                         ; OPCODE_I64_CONST
0000084: 0000 0000 0000 0000                        ; u64 literal
000008c: 6b                                         ; OPCODE_I64_SLE
000008d: 12                                         ; OPCODE_I64_CONST
000008e: 0000 0000 0000 0000                        ; u64 literal
0000096: 12                                         ; OPCODE_I64_CONST
0000097: 0000 0000 0000 0000                        ; u64 literal
000009f: 6d                                         ; OPCODE_I64_ULE
00000a0: 12                                         ; OPCODE_I64_CONST
00000a1: 0000 0000 0000 0000                        ; u64 literal
00000a9: 12                                         ; OPCODE_I64_CONST
00000aa: 0000 0000 0000 0000                        ; u64 literal
00000b2: 6e                                         ; OPCODE_I64_SGT
00000b3: 12                                         ; OPCODE_I64_CONST
00000b4: 0000 0000 0000 0000                        ; u64 literal
00000bc: 12                                         ; OPCODE_I64_CONST
00000bd: 0000 0000 0000 0000                        ; u64 literal
00000c5: 70                                         ; OPCODE_I64_UGT
00000c6: 12                                         ; OPCODE_I64_CONST
00000c7: 0000 0000 0000 0000                        ; u64 literal
00000cf: 12                                         ; OPCODE_I64_CONST
00000d0: 0000 0000 0000 0000                        ; u64 literal
00000d8: 6f                                         ; OPCODE_I64_SGE
00000d9: 12                                         ; OPCODE_I64_CONST
00000da: 0000 0000 0000 0000                        ; u64 literal
00000e2: 12                                         ; OPCODE_I64_CONST
00000e3: 0000 0000 0000 0000                        ; u64 literal
00000eb: 71                                         ; OPCODE_I64_UGE
00000ec: 12                                         ; OPCODE_I64_CONST
00000ed: 0000 0000 0000 0000                        ; u64 literal
00000f5: 12                                         ; OPCODE_I64_CONST
00000f6: 0000 0000 0000 0000                        ; u64 literal
00000fe: 83                                         ; OPCODE_F32_EQ
00000ff: 14                                         ; OPCODE_F32_CONST
0000100: 0000 0000                                  ; f32 literal
0000104: 14                                         ; OPCODE_F32_CONST
0000105: 0000 0000                                  ; f32 literal
0000109: 84                                         ; OPCODE_F32_NE
000010a: 14                                         ; OPCODE_F32_CONST
000010b: 0000 0000                                  ; f32 literal
000010f: 14                                         ; OPCODE_F32_CONST
0000110: 0000 0000                                  ; f32 literal
0000114: 85                                         ; OPCODE_F32_LT
0000115: 14                                         ; OPCODE_F32_CONST
0000116: 0000 0000                                  ; f32 literal
000011a: 14                                         ; OPCODE_F32_CONST
000011b: 0000 0000                                  ; f32 literal
000011f: 86                                         ; OPCODE_F32_LE
0000120: 14                                         ; OPCODE_F32_CONST
0000121: 0000 0000                                  ; f32 literal
0000125: 14                                         ; OPCODE_F32_CONST
0000126: 0000 0000                                  ; f32 literal
000012a: 87                                         ; OPCODE_F32_GT
000012b: 14                                         ; OPCODE_F32_CONST
000012c: 0000 0000                                  ; f32 literal
0000130: 14                                         ; OPCODE_F32_CONST
0000131: 0000 0000                                  ; f32 literal
0000135: 88                                         ; OPCODE_F32_GE
0000136: 14                                         ; OPCODE_F32_CONST
0000137: 0000 0000                                  ; f32 literal
000013b: 14                                         ; OPCODE_F32_CONST
000013c: 0000 0000                                  ; f32 literal
0000140: 97                                         ; OPCODE_F64_EQ
0000141: 13                                         ; OPCODE_F64_CONST
0000142: 0000 0000 0000 0000                        ; f64 literal
000014a: 13                                         ; OPCODE_F64_CONST
000014b: 0000 0000 0000 0000                        ; f64 literal
0000153: 98                                         ; OPCODE_F64_NE
0000154: 13                                         ; OPCODE_F64_CONST
0000155: 0000 0000 0000 0000                        ; f64 literal
000015d: 13                                         ; OPCODE_F64_CONST
000015e: 0000 0000 0000 0000                        ; f64 literal
0000166: 99                                         ; OPCODE_F64_LT
0000167: 13                                         ; OPCODE_F64_CONST
0000168: 0000 0000 0000 0000                        ; f64 literal
0000170: 13                                         ; OPCODE_F64_CONST
0000171: 0000 0000 0000 0000                        ; f64 literal
0000179: 9a                                         ; OPCODE_F64_LE
000017a: 13                                         ; OPCODE_F64_CONST
000017b: 0000 0000 0000 0000                        ; f64 literal
0000183: 13                                         ; OPCODE_F64_CONST
0000184: 0000 0000 0000 0000                        ; f64 literal
000018c: 9b                                         ; OPCODE_F64_GT
000018d: 13                                         ; OPCODE_F64_CONST
000018e: 0000 0000 0000 0000                        ; f64 literal
0000196: 13                                         ; OPCODE_F64_CONST
0000197: 0000 0000 0000 0000                        ; f64 literal
000019f: 9c                                         ; OPCODE_F64_GE
00001a0: 13                                         ; OPCODE_F64_CONST
00001a1: 0000 0000 0000 0000                        ; f64 literal
00001a9: 13                                         ; OPCODE_F64_CONST
00001aa: 0000 0000 0000 0000                        ; f64 literal
0000012: b201 0000                                  ; FIXUP func code end offset
; names
0000000: 0001 0000 0100 0000 0000 0000 0000 2000  .............. .
0000010: 0000 b201 0000 0000 0000 0000 0000 0000  ................
0000020: 4d4e 4f51 5052 5355 5456 1000 1000 1000  MNOQPRSUTV......
0000030: 1000 1000 1000 1000 1000 1000 1000 1000  ................
0000040: 6812 0000 0000 0000 0000 1200 0000 0000  h...............
0000050: 0000 0069 1200 0000 0000 0000 0012 0000  ...i............
0000060: 0000 0000 0000 6a12 0000 0000 0000 0000  ......j.........
0000070: 1200 0000 0000 0000 006c 1200 0000 0000  .........l......
0000080: 0000 0012 0000 0000 0000 0000 6b12 0000  ............k...
0000090: 0000 0000 0000 1200 0000 0000 0000 006d  ...............m
00000a0: 1200 0000 0000 0000 0012 0000 0000 0000  ................
00000b0: 0000 6e12 0000 0000 0000 0000 1200 0000  ..n.............
00000c0: 0000 0000 0070 1200 0000 0000 0000 0012  .....p..........
00000d0: 0000 0000 0000 0000 6f12 0000 0000 0000  ........o.......
00000e0: 0000 1200 0000 0000 0000 0071 1200 0000  ...........q....
00000f0: 0000 0000 0012 0000 0000 0000 0000 8314  ................
0000100: 0000 0000 1400 0000 0084 1400 0000 0014  ................
0000110: 0000 0000 8514 0000 0000 1400 0000 0086  ................
0000120: 1400 0000 0014 0000 0000 8714 0000 0000  ................
0000130: 1400 0000 0088 1400 0000 0014 0000 0000  ................
0000140: 9713 0000 0000 0000 0000 1300 0000 0000  ................
0000150: 0000 0098 1300 0000 0000 0000 0013 0000  ................
0000160: 0000 0000 0000 9913 0000 0000 0000 0000  ................
0000170: 1300 0000 0000 0000 009a 1300 0000 0000  ................
0000180: 0000 0013 0000 0000 0000 0000 9b13 0000  ................
0000190: 0000 0000 0000 1300 0000 0000 0000 009c  ................
00001a0: 1300 0000 0000 0000 0013 0000 0000 0000  ................
00001b0: 0000                                     ..
