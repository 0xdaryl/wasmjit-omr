;;; FLAGS: -dv
(module
  (func
    (i32.eq
      (i32.ne
        (i32.lt_s
          (i32.lt_u
            (i32.le_s
              (i32.le_u
                (i32.gt_s
                  (i32.gt_u
                    (i32.ge_s
                      (i32.ge_u
                        (i32.const 0)
                        (i32.const 0))
                      (i32.const 0))
                    (i32.const 0))
                  (i32.const 0))
                (i32.const 0))
              (i32.const 0))
            (i32.const 0))
          (i32.const 0))
        (i32.const 0))
      (i32.const 0))

    ;; all comparisons return i32, so these tests can't be chained like the one
    ;; above
    (i64.eq (i64.const 0) (i64.const 0))
    (i64.ne (i64.const 0) (i64.const 0))
    (i64.lt_s (i64.const 0) (i64.const 0))
    (i64.lt_u (i64.const 0) (i64.const 0))
    (i64.le_s (i64.const 0) (i64.const 0))
    (i64.le_u (i64.const 0) (i64.const 0))
    (i64.gt_s (i64.const 0) (i64.const 0))
    (i64.gt_u (i64.const 0) (i64.const 0))
    (i64.ge_s (i64.const 0) (i64.const 0))
    (i64.ge_u (i64.const 0) (i64.const 0))

    (f32.eq (f32.const 0) (f32.const 0))
    (f32.ne (f32.const 0) (f32.const 0))
    (f32.lt (f32.const 0) (f32.const 0))
    (f32.le (f32.const 0) (f32.const 0))
    (f32.gt (f32.const 0) (f32.const 0))
    (f32.ge (f32.const 0) (f32.const 0))

    (f64.eq (f64.const 0) (f64.const 0))
    (f64.ne (f64.const 0) (f64.const 0))
    (f64.lt (f64.const 0) (f64.const 0))
    (f64.le (f64.const 0) (f64.const 0))
    (f64.gt (f64.const 0) (f64.const 0))
    (f64.ge (f64.const 0) (f64.const 0))))
(;; STDOUT ;;;
0000000: 0061 736d                                  ; WASM_BINARY_MAGIC
0000004: 0a00 0000                                  ; WASM_BINARY_VERSION
0000008: 01                                         ; WASM_BINARY_SECTION_SIGNATURES
0000009: 01                                         ; num signatures
; signature 0
000000a: 00                                         ; num params
000000b: 00                                         ; result_type
000000c: 02                                         ; WASM_BINARY_SECTION_FUNCTIONS
000000d: 01                                         ; num functions
; function 0
000000e: 00                                         ; func flags
000000f: 0000                                       ; func signature index
0000011: 0000                                       ; func body size
0000013: 4d                                         ; OPCODE_I32_EQ
0000014: 4e                                         ; OPCODE_I32_NE
0000015: 4f                                         ; OPCODE_I32_LT_S
0000016: 51                                         ; OPCODE_I32_LT_U
0000017: 50                                         ; OPCODE_I32_LE_S
0000018: 52                                         ; OPCODE_I32_LE_U
0000019: 53                                         ; OPCODE_I32_GT_S
000001a: 55                                         ; OPCODE_I32_GT_U
000001b: 54                                         ; OPCODE_I32_GE_S
000001c: 56                                         ; OPCODE_I32_GE_U
000001d: 0a                                         ; OPCODE_I32_CONST
000001e: 00                                         ; i32 literal
000001f: 0a                                         ; OPCODE_I32_CONST
0000020: 00                                         ; i32 literal
0000021: 0a                                         ; OPCODE_I32_CONST
0000022: 00                                         ; i32 literal
0000023: 0a                                         ; OPCODE_I32_CONST
0000024: 00                                         ; i32 literal
0000025: 0a                                         ; OPCODE_I32_CONST
0000026: 00                                         ; i32 literal
0000027: 0a                                         ; OPCODE_I32_CONST
0000028: 00                                         ; i32 literal
0000029: 0a                                         ; OPCODE_I32_CONST
000002a: 00                                         ; i32 literal
000002b: 0a                                         ; OPCODE_I32_CONST
000002c: 00                                         ; i32 literal
000002d: 0a                                         ; OPCODE_I32_CONST
000002e: 00                                         ; i32 literal
000002f: 0a                                         ; OPCODE_I32_CONST
0000030: 00                                         ; i32 literal
0000031: 0a                                         ; OPCODE_I32_CONST
0000032: 00                                         ; i32 literal
0000033: 68                                         ; OPCODE_I64_EQ
0000034: 0b                                         ; OPCODE_I64_CONST
0000035: 00                                         ; i64 literal
0000036: 0b                                         ; OPCODE_I64_CONST
0000037: 00                                         ; i64 literal
0000038: 69                                         ; OPCODE_I64_NE
0000039: 0b                                         ; OPCODE_I64_CONST
000003a: 00                                         ; i64 literal
000003b: 0b                                         ; OPCODE_I64_CONST
000003c: 00                                         ; i64 literal
000003d: 6a                                         ; OPCODE_I64_LT_S
000003e: 0b                                         ; OPCODE_I64_CONST
000003f: 00                                         ; i64 literal
0000040: 0b                                         ; OPCODE_I64_CONST
0000041: 00                                         ; i64 literal
0000042: 6c                                         ; OPCODE_I64_LT_U
0000043: 0b                                         ; OPCODE_I64_CONST
0000044: 00                                         ; i64 literal
0000045: 0b                                         ; OPCODE_I64_CONST
0000046: 00                                         ; i64 literal
0000047: 6b                                         ; OPCODE_I64_LE_S
0000048: 0b                                         ; OPCODE_I64_CONST
0000049: 00                                         ; i64 literal
000004a: 0b                                         ; OPCODE_I64_CONST
000004b: 00                                         ; i64 literal
000004c: 6d                                         ; OPCODE_I64_LE_U
000004d: 0b                                         ; OPCODE_I64_CONST
000004e: 00                                         ; i64 literal
000004f: 0b                                         ; OPCODE_I64_CONST
0000050: 00                                         ; i64 literal
0000051: 6e                                         ; OPCODE_I64_GT_S
0000052: 0b                                         ; OPCODE_I64_CONST
0000053: 00                                         ; i64 literal
0000054: 0b                                         ; OPCODE_I64_CONST
0000055: 00                                         ; i64 literal
0000056: 70                                         ; OPCODE_I64_GT_U
0000057: 0b                                         ; OPCODE_I64_CONST
0000058: 00                                         ; i64 literal
0000059: 0b                                         ; OPCODE_I64_CONST
000005a: 00                                         ; i64 literal
000005b: 6f                                         ; OPCODE_I64_GE_S
000005c: 0b                                         ; OPCODE_I64_CONST
000005d: 00                                         ; i64 literal
000005e: 0b                                         ; OPCODE_I64_CONST
000005f: 00                                         ; i64 literal
0000060: 71                                         ; OPCODE_I64_GE_U
0000061: 0b                                         ; OPCODE_I64_CONST
0000062: 00                                         ; i64 literal
0000063: 0b                                         ; OPCODE_I64_CONST
0000064: 00                                         ; i64 literal
0000065: 83                                         ; OPCODE_F32_EQ
0000066: 0d                                         ; OPCODE_F32_CONST
0000067: 0000 0000                                  ; f32 literal
000006b: 0d                                         ; OPCODE_F32_CONST
000006c: 0000 0000                                  ; f32 literal
0000070: 84                                         ; OPCODE_F32_NE
0000071: 0d                                         ; OPCODE_F32_CONST
0000072: 0000 0000                                  ; f32 literal
0000076: 0d                                         ; OPCODE_F32_CONST
0000077: 0000 0000                                  ; f32 literal
000007b: 85                                         ; OPCODE_F32_LT
000007c: 0d                                         ; OPCODE_F32_CONST
000007d: 0000 0000                                  ; f32 literal
0000081: 0d                                         ; OPCODE_F32_CONST
0000082: 0000 0000                                  ; f32 literal
0000086: 86                                         ; OPCODE_F32_LE
0000087: 0d                                         ; OPCODE_F32_CONST
0000088: 0000 0000                                  ; f32 literal
000008c: 0d                                         ; OPCODE_F32_CONST
000008d: 0000 0000                                  ; f32 literal
0000091: 87                                         ; OPCODE_F32_GT
0000092: 0d                                         ; OPCODE_F32_CONST
0000093: 0000 0000                                  ; f32 literal
0000097: 0d                                         ; OPCODE_F32_CONST
0000098: 0000 0000                                  ; f32 literal
000009c: 88                                         ; OPCODE_F32_GE
000009d: 0d                                         ; OPCODE_F32_CONST
000009e: 0000 0000                                  ; f32 literal
00000a2: 0d                                         ; OPCODE_F32_CONST
00000a3: 0000 0000                                  ; f32 literal
00000a7: 97                                         ; OPCODE_F64_EQ
00000a8: 0c                                         ; OPCODE_F64_CONST
00000a9: 0000 0000 0000 0000                        ; f64 literal
00000b1: 0c                                         ; OPCODE_F64_CONST
00000b2: 0000 0000 0000 0000                        ; f64 literal
00000ba: 98                                         ; OPCODE_F64_NE
00000bb: 0c                                         ; OPCODE_F64_CONST
00000bc: 0000 0000 0000 0000                        ; f64 literal
00000c4: 0c                                         ; OPCODE_F64_CONST
00000c5: 0000 0000 0000 0000                        ; f64 literal
00000cd: 99                                         ; OPCODE_F64_LT
00000ce: 0c                                         ; OPCODE_F64_CONST
00000cf: 0000 0000 0000 0000                        ; f64 literal
00000d7: 0c                                         ; OPCODE_F64_CONST
00000d8: 0000 0000 0000 0000                        ; f64 literal
00000e0: 9a                                         ; OPCODE_F64_LE
00000e1: 0c                                         ; OPCODE_F64_CONST
00000e2: 0000 0000 0000 0000                        ; f64 literal
00000ea: 0c                                         ; OPCODE_F64_CONST
00000eb: 0000 0000 0000 0000                        ; f64 literal
00000f3: 9b                                         ; OPCODE_F64_GT
00000f4: 0c                                         ; OPCODE_F64_CONST
00000f5: 0000 0000 0000 0000                        ; f64 literal
00000fd: 0c                                         ; OPCODE_F64_CONST
00000fe: 0000 0000 0000 0000                        ; f64 literal
0000106: 9c                                         ; OPCODE_F64_GE
0000107: 0c                                         ; OPCODE_F64_CONST
0000108: 0000 0000 0000 0000                        ; f64 literal
0000110: 0c                                         ; OPCODE_F64_CONST
0000111: 0000 0000 0000 0000                        ; f64 literal
0000011: 0601                                       ; FIXUP func body size
0000119: 06                                         ; WASM_BINARY_SECTION_END
;; dump
0000000: 0061 736d 0a00 0000 0101 0000 0201 0000  
0000010: 0006 014d 4e4f 5150 5253 5554 560a 000a  
0000020: 000a 000a 000a 000a 000a 000a 000a 000a  
0000030: 000a 0068 0b00 0b00 690b 000b 006a 0b00  
0000040: 0b00 6c0b 000b 006b 0b00 0b00 6d0b 000b  
0000050: 006e 0b00 0b00 700b 000b 006f 0b00 0b00  
0000060: 710b 000b 0083 0d00 0000 000d 0000 0000  
0000070: 840d 0000 0000 0d00 0000 0085 0d00 0000  
0000080: 000d 0000 0000 860d 0000 0000 0d00 0000  
0000090: 0087 0d00 0000 000d 0000 0000 880d 0000  
00000a0: 0000 0d00 0000 0097 0c00 0000 0000 0000  
00000b0: 000c 0000 0000 0000 0000 980c 0000 0000  
00000c0: 0000 0000 0c00 0000 0000 0000 0099 0c00  
00000d0: 0000 0000 0000 000c 0000 0000 0000 0000  
00000e0: 9a0c 0000 0000 0000 0000 0c00 0000 0000  
00000f0: 0000 009b 0c00 0000 0000 0000 000c 0000  
0000100: 0000 0000 0000 9c0c 0000 0000 0000 0000  
0000110: 0c00 0000 0000 0000 0006                 
;;; STDOUT ;;)
