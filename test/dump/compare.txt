;;; FLAGS: -dv
(module
  (func
    (i32.eq
      (i32.ne
        (i32.lt_s
          (i32.lt_u
            (i32.le_s
              (i32.le_u
                (i32.gt_s
                  (i32.gt_u
                    (i32.ge_s
                      (i32.ge_u
                        (i32.const 0)
                        (i32.const 0))
                      (i32.const 0))
                    (i32.const 0))
                  (i32.const 0))
                (i32.const 0))
              (i32.const 0))
            (i32.const 0))
          (i32.const 0))
        (i32.const 0))
      (i32.const 0))

    ;; all comparisons return i32, so these tests can't be chained like the one
    ;; above
    (i64.eq (i64.const 0) (i64.const 0))
    (i64.ne (i64.const 0) (i64.const 0))
    (i64.lt_s (i64.const 0) (i64.const 0))
    (i64.lt_u (i64.const 0) (i64.const 0))
    (i64.le_s (i64.const 0) (i64.const 0))
    (i64.le_u (i64.const 0) (i64.const 0))
    (i64.gt_s (i64.const 0) (i64.const 0))
    (i64.gt_u (i64.const 0) (i64.const 0))
    (i64.ge_s (i64.const 0) (i64.const 0))
    (i64.ge_u (i64.const 0) (i64.const 0))

    (f32.eq (f32.const 0) (f32.const 0))
    (f32.ne (f32.const 0) (f32.const 0))
    (f32.lt (f32.const 0) (f32.const 0))
    (f32.le (f32.const 0) (f32.const 0))
    (f32.gt (f32.const 0) (f32.const 0))
    (f32.ge (f32.const 0) (f32.const 0))

    (f64.eq (f64.const 0) (f64.const 0))
    (f64.ne (f64.const 0) (f64.const 0))
    (f64.lt (f64.const 0) (f64.const 0))
    (f64.le (f64.const 0) (f64.const 0))
    (f64.gt (f64.const 0) (f64.const 0))
    (f64.ge (f64.const 0) (f64.const 0))))
(;; STDOUT ;;;
0000000: 0061 736d                                  ; WASM_BINARY_MAGIC
0000004: 0b00 0000                                  ; WASM_BINARY_VERSION
; section "type"
0000008: 04                                         ; string length
0000009: 7479 7065                                  ; section id: "type"
000000d: 00                                         ; section size (guess)
000000e: 01                                         ; num types
; type 0
000000f: 40                                         ; function form
0000010: 00                                         ; num params
0000011: 00                                         ; num results
000000d: 04                                         ; FIXUP section size
; section "function"
0000012: 08                                         ; string length
0000013: 6675 6e63 7469 6f6e                        ; section id: "function"
000001b: 00                                         ; section size (guess)
000001c: 01                                         ; num functions
000001d: 00                                         ; function 0 signature index
000001b: 02                                         ; FIXUP section size
; section "code"
000001e: 04                                         ; string length
000001f: 636f 6465                                  ; section id: "code"
0000023: 00                                         ; section size (guess)
0000024: 01                                         ; num functions
; function body 0
0000025: 00                                         ; func body size (guess)
0000026: 00                                         ; local decl count
0000027: 10                                         ; OPCODE_I32_CONST
0000028: 00                                         ; i32 literal
0000029: 10                                         ; OPCODE_I32_CONST
000002a: 00                                         ; i32 literal
000002b: 56                                         ; OPCODE_I32_GE_U
000002c: 10                                         ; OPCODE_I32_CONST
000002d: 00                                         ; i32 literal
000002e: 54                                         ; OPCODE_I32_GE_S
000002f: 10                                         ; OPCODE_I32_CONST
0000030: 00                                         ; i32 literal
0000031: 55                                         ; OPCODE_I32_GT_U
0000032: 10                                         ; OPCODE_I32_CONST
0000033: 00                                         ; i32 literal
0000034: 53                                         ; OPCODE_I32_GT_S
0000035: 10                                         ; OPCODE_I32_CONST
0000036: 00                                         ; i32 literal
0000037: 52                                         ; OPCODE_I32_LE_U
0000038: 10                                         ; OPCODE_I32_CONST
0000039: 00                                         ; i32 literal
000003a: 50                                         ; OPCODE_I32_LE_S
000003b: 10                                         ; OPCODE_I32_CONST
000003c: 00                                         ; i32 literal
000003d: 51                                         ; OPCODE_I32_LT_U
000003e: 10                                         ; OPCODE_I32_CONST
000003f: 00                                         ; i32 literal
0000040: 4f                                         ; OPCODE_I32_LT_S
0000041: 10                                         ; OPCODE_I32_CONST
0000042: 00                                         ; i32 literal
0000043: 4e                                         ; OPCODE_I32_NE
0000044: 10                                         ; OPCODE_I32_CONST
0000045: 00                                         ; i32 literal
0000046: 4d                                         ; OPCODE_I32_EQ
0000047: 11                                         ; OPCODE_I64_CONST
0000048: 00                                         ; i64 literal
0000049: 11                                         ; OPCODE_I64_CONST
000004a: 00                                         ; i64 literal
000004b: 68                                         ; OPCODE_I64_EQ
000004c: 11                                         ; OPCODE_I64_CONST
000004d: 00                                         ; i64 literal
000004e: 11                                         ; OPCODE_I64_CONST
000004f: 00                                         ; i64 literal
0000050: 69                                         ; OPCODE_I64_NE
0000051: 11                                         ; OPCODE_I64_CONST
0000052: 00                                         ; i64 literal
0000053: 11                                         ; OPCODE_I64_CONST
0000054: 00                                         ; i64 literal
0000055: 6a                                         ; OPCODE_I64_LT_S
0000056: 11                                         ; OPCODE_I64_CONST
0000057: 00                                         ; i64 literal
0000058: 11                                         ; OPCODE_I64_CONST
0000059: 00                                         ; i64 literal
000005a: 6c                                         ; OPCODE_I64_LT_U
000005b: 11                                         ; OPCODE_I64_CONST
000005c: 00                                         ; i64 literal
000005d: 11                                         ; OPCODE_I64_CONST
000005e: 00                                         ; i64 literal
000005f: 6b                                         ; OPCODE_I64_LE_S
0000060: 11                                         ; OPCODE_I64_CONST
0000061: 00                                         ; i64 literal
0000062: 11                                         ; OPCODE_I64_CONST
0000063: 00                                         ; i64 literal
0000064: 6d                                         ; OPCODE_I64_LE_U
0000065: 11                                         ; OPCODE_I64_CONST
0000066: 00                                         ; i64 literal
0000067: 11                                         ; OPCODE_I64_CONST
0000068: 00                                         ; i64 literal
0000069: 6e                                         ; OPCODE_I64_GT_S
000006a: 11                                         ; OPCODE_I64_CONST
000006b: 00                                         ; i64 literal
000006c: 11                                         ; OPCODE_I64_CONST
000006d: 00                                         ; i64 literal
000006e: 70                                         ; OPCODE_I64_GT_U
000006f: 11                                         ; OPCODE_I64_CONST
0000070: 00                                         ; i64 literal
0000071: 11                                         ; OPCODE_I64_CONST
0000072: 00                                         ; i64 literal
0000073: 6f                                         ; OPCODE_I64_GE_S
0000074: 11                                         ; OPCODE_I64_CONST
0000075: 00                                         ; i64 literal
0000076: 11                                         ; OPCODE_I64_CONST
0000077: 00                                         ; i64 literal
0000078: 71                                         ; OPCODE_I64_GE_U
0000079: 13                                         ; OPCODE_F32_CONST
000007a: 0000 0000                                  ; f32 literal
000007e: 13                                         ; OPCODE_F32_CONST
000007f: 0000 0000                                  ; f32 literal
0000083: 83                                         ; OPCODE_F32_EQ
0000084: 13                                         ; OPCODE_F32_CONST
0000085: 0000 0000                                  ; f32 literal
0000089: 13                                         ; OPCODE_F32_CONST
000008a: 0000 0000                                  ; f32 literal
000008e: 84                                         ; OPCODE_F32_NE
000008f: 13                                         ; OPCODE_F32_CONST
0000090: 0000 0000                                  ; f32 literal
0000094: 13                                         ; OPCODE_F32_CONST
0000095: 0000 0000                                  ; f32 literal
0000099: 85                                         ; OPCODE_F32_LT
000009a: 13                                         ; OPCODE_F32_CONST
000009b: 0000 0000                                  ; f32 literal
000009f: 13                                         ; OPCODE_F32_CONST
00000a0: 0000 0000                                  ; f32 literal
00000a4: 86                                         ; OPCODE_F32_LE
00000a5: 13                                         ; OPCODE_F32_CONST
00000a6: 0000 0000                                  ; f32 literal
00000aa: 13                                         ; OPCODE_F32_CONST
00000ab: 0000 0000                                  ; f32 literal
00000af: 87                                         ; OPCODE_F32_GT
00000b0: 13                                         ; OPCODE_F32_CONST
00000b1: 0000 0000                                  ; f32 literal
00000b5: 13                                         ; OPCODE_F32_CONST
00000b6: 0000 0000                                  ; f32 literal
00000ba: 88                                         ; OPCODE_F32_GE
00000bb: 12                                         ; OPCODE_F64_CONST
00000bc: 0000 0000 0000 0000                        ; f64 literal
00000c4: 12                                         ; OPCODE_F64_CONST
00000c5: 0000 0000 0000 0000                        ; f64 literal
00000cd: 97                                         ; OPCODE_F64_EQ
00000ce: 12                                         ; OPCODE_F64_CONST
00000cf: 0000 0000 0000 0000                        ; f64 literal
00000d7: 12                                         ; OPCODE_F64_CONST
00000d8: 0000 0000 0000 0000                        ; f64 literal
00000e0: 98                                         ; OPCODE_F64_NE
00000e1: 12                                         ; OPCODE_F64_CONST
00000e2: 0000 0000 0000 0000                        ; f64 literal
00000ea: 12                                         ; OPCODE_F64_CONST
00000eb: 0000 0000 0000 0000                        ; f64 literal
00000f3: 99                                         ; OPCODE_F64_LT
00000f4: 12                                         ; OPCODE_F64_CONST
00000f5: 0000 0000 0000 0000                        ; f64 literal
00000fd: 12                                         ; OPCODE_F64_CONST
00000fe: 0000 0000 0000 0000                        ; f64 literal
0000106: 9a                                         ; OPCODE_F64_LE
0000107: 12                                         ; OPCODE_F64_CONST
0000108: 0000 0000 0000 0000                        ; f64 literal
0000110: 12                                         ; OPCODE_F64_CONST
0000111: 0000 0000 0000 0000                        ; f64 literal
0000119: 9b                                         ; OPCODE_F64_GT
000011a: 12                                         ; OPCODE_F64_CONST
000011b: 0000 0000 0000 0000                        ; f64 literal
0000123: 12                                         ; OPCODE_F64_CONST
0000124: 0000 0000 0000 0000                        ; f64 literal
000012c: 9c                                         ; OPCODE_F64_GE
; move data: [26, 12d) -> [27, 12e)
0000025: 8702                                       ; FIXUP func body size
; move data: [24, 12e) -> [25, 12f)
0000023: 8a02                                       ; FIXUP section size
;; dump
0000000: 0061 736d 0b00 0000 0474 7970 6504 0140  
0000010: 0000 0866 756e 6374 696f 6e02 0100 0463  
0000020: 6f64 658a 0201 8702 0010 0010 0056 1000  
0000030: 5410 0055 1000 5310 0052 1000 5010 0051  
0000040: 1000 4f10 004e 1000 4d11 0011 0068 1100  
0000050: 1100 6911 0011 006a 1100 1100 6c11 0011  
0000060: 006b 1100 1100 6d11 0011 006e 1100 1100  
0000070: 7011 0011 006f 1100 1100 7113 0000 0000  
0000080: 1300 0000 0083 1300 0000 0013 0000 0000  
0000090: 8413 0000 0000 1300 0000 0085 1300 0000  
00000a0: 0013 0000 0000 8613 0000 0000 1300 0000  
00000b0: 0087 1300 0000 0013 0000 0000 8812 0000  
00000c0: 0000 0000 0000 1200 0000 0000 0000 0097  
00000d0: 1200 0000 0000 0000 0012 0000 0000 0000  
00000e0: 0000 9812 0000 0000 0000 0000 1200 0000  
00000f0: 0000 0000 0099 1200 0000 0000 0000 0012  
0000100: 0000 0000 0000 0000 9a12 0000 0000 0000  
0000110: 0000 1200 0000 0000 0000 009b 1200 0000  
0000120: 0000 0000 0012 0000 0000 0000 0000 9c    
;;; STDOUT ;;)
