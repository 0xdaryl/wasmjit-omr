;;; FLAGS: -dv
(module
  (func
    (i32.eq
      (i32.ne
        (i32.lt_s
          (i32.lt_u
            (i32.le_s
              (i32.le_u
                (i32.gt_s
                  (i32.gt_u
                    (i32.ge_s
                      (i32.ge_u
                        (i32.const 0)
                        (i32.const 0))
                      (i32.const 0))
                    (i32.const 0))
                  (i32.const 0))
                (i32.const 0))
              (i32.const 0))
            (i32.const 0))
          (i32.const 0))
        (i32.const 0))
      (i32.const 0))

    ;; all comparisons return i32, so these tests can't be chained like the one
    ;; above
    (i64.eq (i64.const 0) (i64.const 0))
    (i64.ne (i64.const 0) (i64.const 0))
    (i64.lt_s (i64.const 0) (i64.const 0))
    (i64.lt_u (i64.const 0) (i64.const 0))
    (i64.le_s (i64.const 0) (i64.const 0))
    (i64.le_u (i64.const 0) (i64.const 0))
    (i64.gt_s (i64.const 0) (i64.const 0))
    (i64.gt_u (i64.const 0) (i64.const 0))
    (i64.ge_s (i64.const 0) (i64.const 0))
    (i64.ge_u (i64.const 0) (i64.const 0))

    (f32.eq (f32.const 0) (f32.const 0))
    (f32.ne (f32.const 0) (f32.const 0))
    (f32.lt (f32.const 0) (f32.const 0))
    (f32.le (f32.const 0) (f32.const 0))
    (f32.gt (f32.const 0) (f32.const 0))
    (f32.ge (f32.const 0) (f32.const 0))

    (f64.eq (f64.const 0) (f64.const 0))
    (f64.ne (f64.const 0) (f64.const 0))
    (f64.lt (f64.const 0) (f64.const 0))
    (f64.le (f64.const 0) (f64.const 0))
    (f64.gt (f64.const 0) (f64.const 0))
    (f64.ge (f64.const 0) (f64.const 0))))
(;; STDOUT ;;;
0000000: 0061 736d                                  ; WASM_BINARY_MAGIC
0000004: 0a00 0000                                  ; WASM_BINARY_VERSION
; section "signatures"
0000008: 00                                         ; section size (guess)
0000009: 0a                                         ; string length
000000a: 7369 676e 6174 7572 6573                   ; section id: "signatures"
0000014: 01                                         ; num signatures
; signature 0
0000015: 00                                         ; num params
0000016: 00                                         ; result_type
0000008: 0e                                         ; FIXUP section size
; section "function_signatures"
0000017: 00                                         ; section size (guess)
0000018: 13                                         ; string length
0000019: 6675 6e63 7469 6f6e 5f73 6967 6e61 7475  
0000029: 7265 73                                    ; section id: "function_signatures"
000002c: 01                                         ; num functions
000002d: 00                                         ; function 0 signature index
0000017: 16                                         ; FIXUP section size
; section "function_bodies"
000002e: 00                                         ; section size (guess)
000002f: 0f                                         ; string length
0000030: 6675 6e63 7469 6f6e 5f62 6f64 6965 73      ; section id: "function_bodies"
000003f: 01                                         ; num functions
; function body 0
0000040: 00                                         ; func body size (guess)
0000041: 00                                         ; local decl count
0000042: 4d                                         ; OPCODE_I32_EQ
0000043: 4e                                         ; OPCODE_I32_NE
0000044: 4f                                         ; OPCODE_I32_LT_S
0000045: 51                                         ; OPCODE_I32_LT_U
0000046: 50                                         ; OPCODE_I32_LE_S
0000047: 52                                         ; OPCODE_I32_LE_U
0000048: 53                                         ; OPCODE_I32_GT_S
0000049: 55                                         ; OPCODE_I32_GT_U
000004a: 54                                         ; OPCODE_I32_GE_S
000004b: 56                                         ; OPCODE_I32_GE_U
000004c: 0a                                         ; OPCODE_I32_CONST
000004d: 00                                         ; i32 literal
000004e: 0a                                         ; OPCODE_I32_CONST
000004f: 00                                         ; i32 literal
0000050: 0a                                         ; OPCODE_I32_CONST
0000051: 00                                         ; i32 literal
0000052: 0a                                         ; OPCODE_I32_CONST
0000053: 00                                         ; i32 literal
0000054: 0a                                         ; OPCODE_I32_CONST
0000055: 00                                         ; i32 literal
0000056: 0a                                         ; OPCODE_I32_CONST
0000057: 00                                         ; i32 literal
0000058: 0a                                         ; OPCODE_I32_CONST
0000059: 00                                         ; i32 literal
000005a: 0a                                         ; OPCODE_I32_CONST
000005b: 00                                         ; i32 literal
000005c: 0a                                         ; OPCODE_I32_CONST
000005d: 00                                         ; i32 literal
000005e: 0a                                         ; OPCODE_I32_CONST
000005f: 00                                         ; i32 literal
0000060: 0a                                         ; OPCODE_I32_CONST
0000061: 00                                         ; i32 literal
0000062: 68                                         ; OPCODE_I64_EQ
0000063: 0b                                         ; OPCODE_I64_CONST
0000064: 00                                         ; i64 literal
0000065: 0b                                         ; OPCODE_I64_CONST
0000066: 00                                         ; i64 literal
0000067: 69                                         ; OPCODE_I64_NE
0000068: 0b                                         ; OPCODE_I64_CONST
0000069: 00                                         ; i64 literal
000006a: 0b                                         ; OPCODE_I64_CONST
000006b: 00                                         ; i64 literal
000006c: 6a                                         ; OPCODE_I64_LT_S
000006d: 0b                                         ; OPCODE_I64_CONST
000006e: 00                                         ; i64 literal
000006f: 0b                                         ; OPCODE_I64_CONST
0000070: 00                                         ; i64 literal
0000071: 6c                                         ; OPCODE_I64_LT_U
0000072: 0b                                         ; OPCODE_I64_CONST
0000073: 00                                         ; i64 literal
0000074: 0b                                         ; OPCODE_I64_CONST
0000075: 00                                         ; i64 literal
0000076: 6b                                         ; OPCODE_I64_LE_S
0000077: 0b                                         ; OPCODE_I64_CONST
0000078: 00                                         ; i64 literal
0000079: 0b                                         ; OPCODE_I64_CONST
000007a: 00                                         ; i64 literal
000007b: 6d                                         ; OPCODE_I64_LE_U
000007c: 0b                                         ; OPCODE_I64_CONST
000007d: 00                                         ; i64 literal
000007e: 0b                                         ; OPCODE_I64_CONST
000007f: 00                                         ; i64 literal
0000080: 6e                                         ; OPCODE_I64_GT_S
0000081: 0b                                         ; OPCODE_I64_CONST
0000082: 00                                         ; i64 literal
0000083: 0b                                         ; OPCODE_I64_CONST
0000084: 00                                         ; i64 literal
0000085: 70                                         ; OPCODE_I64_GT_U
0000086: 0b                                         ; OPCODE_I64_CONST
0000087: 00                                         ; i64 literal
0000088: 0b                                         ; OPCODE_I64_CONST
0000089: 00                                         ; i64 literal
000008a: 6f                                         ; OPCODE_I64_GE_S
000008b: 0b                                         ; OPCODE_I64_CONST
000008c: 00                                         ; i64 literal
000008d: 0b                                         ; OPCODE_I64_CONST
000008e: 00                                         ; i64 literal
000008f: 71                                         ; OPCODE_I64_GE_U
0000090: 0b                                         ; OPCODE_I64_CONST
0000091: 00                                         ; i64 literal
0000092: 0b                                         ; OPCODE_I64_CONST
0000093: 00                                         ; i64 literal
0000094: 83                                         ; OPCODE_F32_EQ
0000095: 0d                                         ; OPCODE_F32_CONST
0000096: 0000 0000                                  ; f32 literal
000009a: 0d                                         ; OPCODE_F32_CONST
000009b: 0000 0000                                  ; f32 literal
000009f: 84                                         ; OPCODE_F32_NE
00000a0: 0d                                         ; OPCODE_F32_CONST
00000a1: 0000 0000                                  ; f32 literal
00000a5: 0d                                         ; OPCODE_F32_CONST
00000a6: 0000 0000                                  ; f32 literal
00000aa: 85                                         ; OPCODE_F32_LT
00000ab: 0d                                         ; OPCODE_F32_CONST
00000ac: 0000 0000                                  ; f32 literal
00000b0: 0d                                         ; OPCODE_F32_CONST
00000b1: 0000 0000                                  ; f32 literal
00000b5: 86                                         ; OPCODE_F32_LE
00000b6: 0d                                         ; OPCODE_F32_CONST
00000b7: 0000 0000                                  ; f32 literal
00000bb: 0d                                         ; OPCODE_F32_CONST
00000bc: 0000 0000                                  ; f32 literal
00000c0: 87                                         ; OPCODE_F32_GT
00000c1: 0d                                         ; OPCODE_F32_CONST
00000c2: 0000 0000                                  ; f32 literal
00000c6: 0d                                         ; OPCODE_F32_CONST
00000c7: 0000 0000                                  ; f32 literal
00000cb: 88                                         ; OPCODE_F32_GE
00000cc: 0d                                         ; OPCODE_F32_CONST
00000cd: 0000 0000                                  ; f32 literal
00000d1: 0d                                         ; OPCODE_F32_CONST
00000d2: 0000 0000                                  ; f32 literal
00000d6: 97                                         ; OPCODE_F64_EQ
00000d7: 0c                                         ; OPCODE_F64_CONST
00000d8: 0000 0000 0000 0000                        ; f64 literal
00000e0: 0c                                         ; OPCODE_F64_CONST
00000e1: 0000 0000 0000 0000                        ; f64 literal
00000e9: 98                                         ; OPCODE_F64_NE
00000ea: 0c                                         ; OPCODE_F64_CONST
00000eb: 0000 0000 0000 0000                        ; f64 literal
00000f3: 0c                                         ; OPCODE_F64_CONST
00000f4: 0000 0000 0000 0000                        ; f64 literal
00000fc: 99                                         ; OPCODE_F64_LT
00000fd: 0c                                         ; OPCODE_F64_CONST
00000fe: 0000 0000 0000 0000                        ; f64 literal
0000106: 0c                                         ; OPCODE_F64_CONST
0000107: 0000 0000 0000 0000                        ; f64 literal
000010f: 9a                                         ; OPCODE_F64_LE
0000110: 0c                                         ; OPCODE_F64_CONST
0000111: 0000 0000 0000 0000                        ; f64 literal
0000119: 0c                                         ; OPCODE_F64_CONST
000011a: 0000 0000 0000 0000                        ; f64 literal
0000122: 9b                                         ; OPCODE_F64_GT
0000123: 0c                                         ; OPCODE_F64_CONST
0000124: 0000 0000 0000 0000                        ; f64 literal
000012c: 0c                                         ; OPCODE_F64_CONST
000012d: 0000 0000 0000 0000                        ; f64 literal
0000135: 9c                                         ; OPCODE_F64_GE
0000136: 0c                                         ; OPCODE_F64_CONST
0000137: 0000 0000 0000 0000                        ; f64 literal
000013f: 0c                                         ; OPCODE_F64_CONST
0000140: 0000 0000 0000 0000                        ; f64 literal
; move data: [41, 148) -> [42, 149)
0000040: 8702                                       ; FIXUP func body size
; move data: [2f, 149) -> [30, 14a)
000002e: 9a02                                       ; FIXUP section size
; section "end"
000014a: 00                                         ; section size (guess)
000014b: 03                                         ; string length
000014c: 656e 64                                    ; section id: "end"
000014a: 04                                         ; FIXUP section size
;; dump
0000000: 0061 736d 0a00 0000 0e0a 7369 676e 6174  
0000010: 7572 6573 0100 0016 1366 756e 6374 696f  
0000020: 6e5f 7369 676e 6174 7572 6573 0100 9a02  
0000030: 0f66 756e 6374 696f 6e5f 626f 6469 6573  
0000040: 0187 0200 4d4e 4f51 5052 5355 5456 0a00  
0000050: 0a00 0a00 0a00 0a00 0a00 0a00 0a00 0a00  
0000060: 0a00 0a00 680b 000b 0069 0b00 0b00 6a0b  
0000070: 000b 006c 0b00 0b00 6b0b 000b 006d 0b00  
0000080: 0b00 6e0b 000b 0070 0b00 0b00 6f0b 000b  
0000090: 0071 0b00 0b00 830d 0000 0000 0d00 0000  
00000a0: 0084 0d00 0000 000d 0000 0000 850d 0000  
00000b0: 0000 0d00 0000 0086 0d00 0000 000d 0000  
00000c0: 0000 870d 0000 0000 0d00 0000 0088 0d00  
00000d0: 0000 000d 0000 0000 970c 0000 0000 0000  
00000e0: 0000 0c00 0000 0000 0000 0098 0c00 0000  
00000f0: 0000 0000 000c 0000 0000 0000 0000 990c  
0000100: 0000 0000 0000 0000 0c00 0000 0000 0000  
0000110: 009a 0c00 0000 0000 0000 000c 0000 0000  
0000120: 0000 0000 9b0c 0000 0000 0000 0000 0c00  
0000130: 0000 0000 0000 009c 0c00 0000 0000 0000  
0000140: 000c 0000 0000 0000 0000 0403 656e 64    
;;; STDOUT ;;)
