# FLAGS: -dv
(module
  (func
    (i32.eq
      (i32.neq
        (i32.lt_s
          (i32.lt_u
            (i32.le_s
              (i32.le_u
                (i32.gt_s
                  (i32.gt_u
                    (i32.ge_s
                      (i32.ge_u
                        (i32.const 0)
                        (i32.const 0))
                      (i32.const 0))
                    (i32.const 0))
                  (i32.const 0))
                (i32.const 0))
              (i32.const 0))
            (i32.const 0))
          (i32.const 0))
        (i32.const 0))
      (i32.const 0))

    ;; all comparisons return i32, so these tests can't be chained like the one
    ;; above
    (i64.eq (i64.const 0) (i64.const 0))
    (i64.neq (i64.const 0) (i64.const 0))
    (i64.lt_s (i64.const 0) (i64.const 0))
    (i64.lt_u (i64.const 0) (i64.const 0))
    (i64.le_s (i64.const 0) (i64.const 0))
    (i64.le_u (i64.const 0) (i64.const 0))
    (i64.gt_s (i64.const 0) (i64.const 0))
    (i64.gt_u (i64.const 0) (i64.const 0))
    (i64.ge_s (i64.const 0) (i64.const 0))
    (i64.ge_u (i64.const 0) (i64.const 0))

    (f32.eq (f32.const 0) (f32.const 0))
    (f32.neq (f32.const 0) (f32.const 0))
    (f32.lt (f32.const 0) (f32.const 0))
    (f32.le (f32.const 0) (f32.const 0))
    (f32.gt (f32.const 0) (f32.const 0))
    (f32.ge (f32.const 0) (f32.const 0))

    (f64.eq (f64.const 0) (f64.const 0))
    (f64.neq (f64.const 0) (f64.const 0))
    (f64.lt (f64.const 0) (f64.const 0))
    (f64.le (f64.const 0) (f64.const 0))
    (f64.gt (f64.const 0) (f64.const 0))
    (f64.ge (f64.const 0) (f64.const 0))))
# STDOUT:
0000000: 00                                         ; mem size log 2
0000001: 01                                         ; export mem
0000002: 0000                                       ; num globals
0000004: 0100                                       ; num funcs
0000006: 0000                                       ; num data segments
; function header 0
0000008: 00                                         ; func num args
0000009: 00                                         ; func result type
000000a: 0000 0000                                  ; func name offset
000000e: 0000 0000                                  ; func code start offset
0000012: 0000 0000                                  ; func code end offset
0000016: 0000                                       ; num local i32
0000018: 0000                                       ; num local i64
000001a: 0000                                       ; num local f32
000001c: 0000                                       ; num local f64
000001e: 00                                         ; export func
000001f: 00                                         ; func external
; function data 0
000000e: 2000 0000                                  ; FIXUP func code start offset
0000020: 03                                         ; OPCODE_BLOCK
0000021: 01                                         ; toplevel block num expressions
0000022: 4d                                         ; OPCODE_I32_EQ
0000023: 4e                                         ; OPCODE_I32_NE
0000024: 4f                                         ; OPCODE_I32_SLT
0000025: 51                                         ; OPCODE_I32_ULT
0000026: 50                                         ; OPCODE_I32_SLE
0000027: 52                                         ; OPCODE_I32_ULE
0000028: 53                                         ; OPCODE_I32_SGT
0000029: 55                                         ; OPCODE_I32_UGT
000002a: 54                                         ; OPCODE_I32_SGE
000002b: 56                                         ; OPCODE_I32_UGE
000002c: 11                                         ; OPCODE_I32_CONST
000002d: 0000 0000                                  ; u32 literal
0000031: 11                                         ; OPCODE_I32_CONST
0000032: 0000 0000                                  ; u32 literal
0000036: 11                                         ; OPCODE_I32_CONST
0000037: 0000 0000                                  ; u32 literal
000003b: 11                                         ; OPCODE_I32_CONST
000003c: 0000 0000                                  ; u32 literal
0000040: 11                                         ; OPCODE_I32_CONST
0000041: 0000 0000                                  ; u32 literal
0000045: 11                                         ; OPCODE_I32_CONST
0000046: 0000 0000                                  ; u32 literal
000004a: 11                                         ; OPCODE_I32_CONST
000004b: 0000 0000                                  ; u32 literal
000004f: 11                                         ; OPCODE_I32_CONST
0000050: 0000 0000                                  ; u32 literal
0000054: 11                                         ; OPCODE_I32_CONST
0000055: 0000 0000                                  ; u32 literal
0000059: 11                                         ; OPCODE_I32_CONST
000005a: 0000 0000                                  ; u32 literal
000005e: 11                                         ; OPCODE_I32_CONST
000005f: 0000 0000                                  ; u32 literal
0000063: 68                                         ; OPCODE_I64_EQ
0000064: 12                                         ; OPCODE_I64_CONST
0000065: 0000 0000 0000 0000                        ; u64 literal
000006d: 12                                         ; OPCODE_I64_CONST
000006e: 0000 0000 0000 0000                        ; u64 literal
0000076: 69                                         ; OPCODE_I64_NE
0000077: 12                                         ; OPCODE_I64_CONST
0000078: 0000 0000 0000 0000                        ; u64 literal
0000080: 12                                         ; OPCODE_I64_CONST
0000081: 0000 0000 0000 0000                        ; u64 literal
0000089: 6a                                         ; OPCODE_I64_SLT
000008a: 12                                         ; OPCODE_I64_CONST
000008b: 0000 0000 0000 0000                        ; u64 literal
0000093: 12                                         ; OPCODE_I64_CONST
0000094: 0000 0000 0000 0000                        ; u64 literal
000009c: 6c                                         ; OPCODE_I64_ULT
000009d: 12                                         ; OPCODE_I64_CONST
000009e: 0000 0000 0000 0000                        ; u64 literal
00000a6: 12                                         ; OPCODE_I64_CONST
00000a7: 0000 0000 0000 0000                        ; u64 literal
00000af: 6b                                         ; OPCODE_I64_SLE
00000b0: 12                                         ; OPCODE_I64_CONST
00000b1: 0000 0000 0000 0000                        ; u64 literal
00000b9: 12                                         ; OPCODE_I64_CONST
00000ba: 0000 0000 0000 0000                        ; u64 literal
00000c2: 6d                                         ; OPCODE_I64_ULE
00000c3: 12                                         ; OPCODE_I64_CONST
00000c4: 0000 0000 0000 0000                        ; u64 literal
00000cc: 12                                         ; OPCODE_I64_CONST
00000cd: 0000 0000 0000 0000                        ; u64 literal
00000d5: 6e                                         ; OPCODE_I64_SGT
00000d6: 12                                         ; OPCODE_I64_CONST
00000d7: 0000 0000 0000 0000                        ; u64 literal
00000df: 12                                         ; OPCODE_I64_CONST
00000e0: 0000 0000 0000 0000                        ; u64 literal
00000e8: 70                                         ; OPCODE_I64_UGT
00000e9: 12                                         ; OPCODE_I64_CONST
00000ea: 0000 0000 0000 0000                        ; u64 literal
00000f2: 12                                         ; OPCODE_I64_CONST
00000f3: 0000 0000 0000 0000                        ; u64 literal
00000fb: 6f                                         ; OPCODE_I64_SGE
00000fc: 12                                         ; OPCODE_I64_CONST
00000fd: 0000 0000 0000 0000                        ; u64 literal
0000105: 12                                         ; OPCODE_I64_CONST
0000106: 0000 0000 0000 0000                        ; u64 literal
000010e: 71                                         ; OPCODE_I64_UGE
000010f: 12                                         ; OPCODE_I64_CONST
0000110: 0000 0000 0000 0000                        ; u64 literal
0000118: 12                                         ; OPCODE_I64_CONST
0000119: 0000 0000 0000 0000                        ; u64 literal
0000121: 83                                         ; OPCODE_F32_EQ
0000122: 14                                         ; OPCODE_F32_CONST
0000123: 0000 0000                                  ; f32 literal
0000127: 14                                         ; OPCODE_F32_CONST
0000128: 0000 0000                                  ; f32 literal
000012c: 84                                         ; OPCODE_F32_NE
000012d: 14                                         ; OPCODE_F32_CONST
000012e: 0000 0000                                  ; f32 literal
0000132: 14                                         ; OPCODE_F32_CONST
0000133: 0000 0000                                  ; f32 literal
0000137: 85                                         ; OPCODE_F32_LT
0000138: 14                                         ; OPCODE_F32_CONST
0000139: 0000 0000                                  ; f32 literal
000013d: 14                                         ; OPCODE_F32_CONST
000013e: 0000 0000                                  ; f32 literal
0000142: 86                                         ; OPCODE_F32_LE
0000143: 14                                         ; OPCODE_F32_CONST
0000144: 0000 0000                                  ; f32 literal
0000148: 14                                         ; OPCODE_F32_CONST
0000149: 0000 0000                                  ; f32 literal
000014d: 87                                         ; OPCODE_F32_GT
000014e: 14                                         ; OPCODE_F32_CONST
000014f: 0000 0000                                  ; f32 literal
0000153: 14                                         ; OPCODE_F32_CONST
0000154: 0000 0000                                  ; f32 literal
0000158: 88                                         ; OPCODE_F32_GE
0000159: 14                                         ; OPCODE_F32_CONST
000015a: 0000 0000                                  ; f32 literal
000015e: 14                                         ; OPCODE_F32_CONST
000015f: 0000 0000                                  ; f32 literal
0000163: 97                                         ; OPCODE_F64_EQ
0000164: 13                                         ; OPCODE_F64_CONST
0000165: 0000 0000 0000 0000                        ; f64 literal
000016d: 13                                         ; OPCODE_F64_CONST
000016e: 0000 0000 0000 0000                        ; f64 literal
0000176: 98                                         ; OPCODE_F64_NE
0000177: 13                                         ; OPCODE_F64_CONST
0000178: 0000 0000 0000 0000                        ; f64 literal
0000180: 13                                         ; OPCODE_F64_CONST
0000181: 0000 0000 0000 0000                        ; f64 literal
0000189: 99                                         ; OPCODE_F64_LT
000018a: 13                                         ; OPCODE_F64_CONST
000018b: 0000 0000 0000 0000                        ; f64 literal
0000193: 13                                         ; OPCODE_F64_CONST
0000194: 0000 0000 0000 0000                        ; f64 literal
000019c: 9a                                         ; OPCODE_F64_LE
000019d: 13                                         ; OPCODE_F64_CONST
000019e: 0000 0000 0000 0000                        ; f64 literal
00001a6: 13                                         ; OPCODE_F64_CONST
00001a7: 0000 0000 0000 0000                        ; f64 literal
00001af: 9b                                         ; OPCODE_F64_GT
00001b0: 13                                         ; OPCODE_F64_CONST
00001b1: 0000 0000 0000 0000                        ; f64 literal
00001b9: 13                                         ; OPCODE_F64_CONST
00001ba: 0000 0000 0000 0000                        ; f64 literal
00001c2: 9c                                         ; OPCODE_F64_GE
00001c3: 13                                         ; OPCODE_F64_CONST
00001c4: 0000 0000 0000 0000                        ; f64 literal
00001cc: 13                                         ; OPCODE_F64_CONST
00001cd: 0000 0000 0000 0000                        ; f64 literal
0000012: d501 0000                                  ; FIXUP func code end offset
; names
0000000: 0001 0000 0100 0000 0000 0000 0000 2000  .............. .
0000010: 0000 d501 0000 0000 0000 0000 0000 0000  ................
0000020: 0301 4d4e 4f51 5052 5355 5456 1100 0000  ..MNOQPRSUTV....
0000030: 0011 0000 0000 1100 0000 0011 0000 0000  ................
0000040: 1100 0000 0011 0000 0000 1100 0000 0011  ................
0000050: 0000 0000 1100 0000 0011 0000 0000 1100  ................
0000060: 0000 0068 1200 0000 0000 0000 0012 0000  ...h............
0000070: 0000 0000 0000 6912 0000 0000 0000 0000  ......i.........
0000080: 1200 0000 0000 0000 006a 1200 0000 0000  .........j......
0000090: 0000 0012 0000 0000 0000 0000 6c12 0000  ............l...
00000a0: 0000 0000 0000 1200 0000 0000 0000 006b  ...............k
00000b0: 1200 0000 0000 0000 0012 0000 0000 0000  ................
00000c0: 0000 6d12 0000 0000 0000 0000 1200 0000  ..m.............
00000d0: 0000 0000 006e 1200 0000 0000 0000 0012  .....n..........
00000e0: 0000 0000 0000 0000 7012 0000 0000 0000  ........p.......
00000f0: 0000 1200 0000 0000 0000 006f 1200 0000  ...........o....
0000100: 0000 0000 0012 0000 0000 0000 0000 7112  ..............q.
0000110: 0000 0000 0000 0000 1200 0000 0000 0000  ................
0000120: 0083 1400 0000 0014 0000 0000 8414 0000  ................
0000130: 0000 1400 0000 0085 1400 0000 0014 0000  ................
0000140: 0000 8614 0000 0000 1400 0000 0087 1400  ................
0000150: 0000 0014 0000 0000 8814 0000 0000 1400  ................
0000160: 0000 0097 1300 0000 0000 0000 0013 0000  ................
0000170: 0000 0000 0000 9813 0000 0000 0000 0000  ................
0000180: 1300 0000 0000 0000 0099 1300 0000 0000  ................
0000190: 0000 0013 0000 0000 0000 0000 9a13 0000  ................
00001a0: 0000 0000 0000 1300 0000 0000 0000 009b  ................
00001b0: 1300 0000 0000 0000 0013 0000 0000 0000  ................
00001c0: 0000 9c13 0000 0000 0000 0000 1300 0000  ................
00001d0: 0000 0000 00                             .....
