;;; FLAGS: -dv
(module
  (func
    (i32.wrap/i64
      (i64.extend_u/i32
        (i32.trunc_s/f32
          (f32.convert_s/i32
            (i32.trunc_u/f32
              (f32.convert_u/i32
                (i32.trunc_s/f64
                  (f64.convert_s/i32
                    (i32.trunc_u/f64
                      (f64.convert_u/i32 (i32.const 0)))))))))))

    (i64.trunc_s/f32
      (f32.convert_s/i64
        (i64.trunc_u/f32
          (f32.convert_u/i64
            (i64.trunc_s/f64
              (f64.convert_s/i64
                (i64.trunc_u/f64
                  (f64.convert_u/i64
                    (i64.extend_s/i32 (i32.const 0))))))))))

    (f32.demote/f64
      (f64.promote/f32 (f32.const 0)))))
(;; STDOUT ;;;
0000000: 00                                         ; mem size log 2
0000001: 01                                         ; export mem
0000002: 0000                                       ; num globals
0000004: 0100                                       ; num funcs
0000006: 0000                                       ; num data segments
; function header 0
0000008: 00                                         ; func num args
0000009: 00                                         ; func result type
000000a: 0000 0000                                  ; func name offset
000000e: 0000 0000                                  ; func code start offset
0000012: 0000 0000                                  ; func code end offset
0000016: 0000                                       ; num local i32
0000018: 0000                                       ; num local i64
000001a: 0000                                       ; num local f32
000001c: 0000                                       ; num local f64
000001e: 00                                         ; export func
000001f: 00                                         ; func external
; function data 0
000000e: 2000 0000                                  ; FIXUP func code start offset
0000020: a1                                         ; OPCODE_I32_CONVERT_I64
0000021: a7                                         ; OPCODE_I64_UCONVERT_I32
0000022: 9d                                         ; OPCODE_I32_SCONVERT_F32
0000023: a8                                         ; OPCODE_F32_SCONVERT_I32
0000024: 9f                                         ; OPCODE_I32_UCONVERT_F32
0000025: a9                                         ; OPCODE_F32_UCONVERT_I32
0000026: 9e                                         ; OPCODE_I32_SCONVERT_F64
0000027: ae                                         ; OPCODE_F64_SCONVERT_I32
0000028: a0                                         ; OPCODE_I32_UCONVERT_F64
0000029: af                                         ; OPCODE_F64_UCONVERT_I32
000002a: 10                                         ; OPCODE_I8_CONST
000002b: 00                                         ; u8 literal
000002c: a2                                         ; OPCODE_I64_SCONVERT_F32
000002d: aa                                         ; OPCODE_F32_SCONVERT_I64
000002e: a4                                         ; OPCODE_I64_UCONVERT_F32
000002f: ab                                         ; OPCODE_F32_UCONVERT_I64
0000030: a3                                         ; OPCODE_I64_SCONVERT_F64
0000031: b0                                         ; OPCODE_F64_SCONVERT_I64
0000032: a5                                         ; OPCODE_I64_UCONVERT_F64
0000033: b1                                         ; OPCODE_F64_UCONVERT_I64
0000034: a6                                         ; OPCODE_I64_SCONVERT_I32
0000035: 10                                         ; OPCODE_I8_CONST
0000036: 00                                         ; u8 literal
0000037: ac                                         ; OPCODE_F32_CONVERT_F64
0000038: b2                                         ; OPCODE_F64_CONVERT_F32
0000039: 14                                         ; OPCODE_F32_CONST
000003a: 0000 0000                                  ; f32 literal
0000012: 3e00 0000                                  ; FIXUP func code end offset
; names
0000000: 0001 0000 0100 0000 0000 0000 0000 2000  .............. .
0000010: 0000 3e00 0000 0000 0000 0000 0000 0000  ..>.............
0000020: a1a7 9da8 9fa9 9eae a0af 1000 a2aa a4ab  ................
0000030: a3b0 a5b1 a610 00ac b214 0000 0000       ..............
;;; STDOUT ;;)
