# FLAGS: -dv
(module
  (func
    (i32.wrap/i64
      (i64.extend_u/i32
        (i32.trunc_s/f32
          (f32.convert_s/i32
            (i32.trunc_u/f32
              (f32.convert_u/i32
                (i32.trunc_s/f64
                  (f64.convert_s/i32
                    (i32.trunc_u/f64
                      (f64.convert_u/i32 (i32.const 0)))))))))))

    (i64.trunc_s/f32
      (f32.convert_s/i64
        (i64.trunc_u/f32
          (f32.convert_u/i64
            (i64.trunc_s/f64
              (f64.convert_s/i64
                (i64.trunc_u/f64
                  (f64.convert_u/i64
                    (i64.extend_s/i32 (i32.const 0))))))))))

    (f32.demote/f64
      (f64.promote/f32 (f32.const 0)))))
# STDOUT:
0000000: 00                                         ; mem size log 2
0000001: 01                                         ; export mem
0000002: 0000                                       ; num globals
0000004: 0100                                       ; num funcs
0000006: 0000                                       ; num data segments
; function header 0
0000008: 00                                         ; func num args
0000009: 00                                         ; func result type
000000a: 0000 0000                                  ; func name offset
000000e: 0000 0000                                  ; func code start offset
0000012: 0000 0000                                  ; func code end offset
0000016: 0000                                       ; num local i32
0000018: 0000                                       ; num local i64
000001a: 0000                                       ; num local f32
000001c: 0000                                       ; num local f64
000001e: 00                                         ; export func
000001f: 00                                         ; func external
; function data 0
000000e: 2000 0000                                  ; FIXUP func code start offset
0000020: 03                                         ; OPCODE_BLOCK
0000021: 01                                         ; toplevel block num expressions
0000022: a1                                         ; OPCODE_I32_CONVERT_I64
0000023: a7                                         ; OPCODE_I64_UCONVERT_I32
0000024: 9d                                         ; OPCODE_I32_SCONVERT_F32
0000025: a8                                         ; OPCODE_F32_SCONVERT_I32
0000026: 9f                                         ; OPCODE_I32_UCONVERT_F32
0000027: a9                                         ; OPCODE_F32_UCONVERT_I32
0000028: 9e                                         ; OPCODE_I32_SCONVERT_F64
0000029: ae                                         ; OPCODE_F64_SCONVERT_I32
000002a: a0                                         ; OPCODE_I32_UCONVERT_F64
000002b: af                                         ; OPCODE_F64_UCONVERT_I32
000002c: 11                                         ; OPCODE_I32_CONST
000002d: 0000 0000                                  ; u32 literal
0000031: a2                                         ; OPCODE_I64_SCONVERT_F32
0000032: aa                                         ; OPCODE_F32_SCONVERT_I64
0000033: a4                                         ; OPCODE_I64_UCONVERT_F32
0000034: ab                                         ; OPCODE_F32_UCONVERT_I64
0000035: a3                                         ; OPCODE_I64_SCONVERT_F64
0000036: b0                                         ; OPCODE_F64_SCONVERT_I64
0000037: a5                                         ; OPCODE_I64_UCONVERT_F64
0000038: b1                                         ; OPCODE_F64_UCONVERT_I64
0000039: a6                                         ; OPCODE_I64_SCONVERT_I32
000003a: 11                                         ; OPCODE_I32_CONST
000003b: 0000 0000                                  ; u32 literal
000003f: ac                                         ; OPCODE_F32_CONVERT_F64
0000040: b2                                         ; OPCODE_F64_CONVERT_F32
0000041: 14                                         ; OPCODE_F32_CONST
0000042: 0000 0000                                  ; f32 literal
0000012: 4600 0000                                  ; FIXUP func code end offset
; names
0000000: 0001 0000 0100 0000 0000 0000 0000 2000  .............. .
0000010: 0000 4600 0000 0000 0000 0000 0000 0000  ..F.............
0000020: 0301 a1a7 9da8 9fa9 9eae a0af 1100 0000  ................
0000030: 00a2 aaa4 aba3 b0a5 b1a6 1100 0000 00ac  ................
0000040: b214 0000 0000                           ......
