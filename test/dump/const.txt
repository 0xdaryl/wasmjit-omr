;;; FLAGS: -dv
(module
  (func
    (i32.const 0)
    (i32.const -2147483648)
    (i32.const 4294967295)
    (i32.const -0x80000000)
    (i32.const 0xffffffff)

    (i64.const 0)
    (i64.const -9223372036854775808)
    (i64.const 18446744073709551615)
    (i64.const -0x8000000000000000)
    (i64.const 0xffffffffffffffff)

    (f32.const 0.0)
    (f32.const 1e23)
    (f32.const 1.234567e-5)
    (f32.const nan)
    (f32.const -nan)
    (f32.const +nan)
    (f32.const nan:0xabc)
    (f32.const -nan:0xabc)
    (f32.const +nan:0xabc)
    (f32.const infinity)
    (f32.const -infinity)
    (f32.const +infinity)
    (f32.const -0x1p-1)
    (f32.const 0x1.921fb6p+2)

    (f64.const 0.0)
    (f64.const -0.987654321)
    (f64.const 6.283185307179586)
    (f64.const nan)
    (f64.const -nan)
    (f64.const +nan)
    (f64.const nan:0xabc)
    (f64.const -nan:0xabc)
    (f64.const +nan:0xabc)
    (f64.const infinity)
    (f64.const -infinity)
    (f64.const +infinity)
    (f64.const -0x1p-1)
    (f64.const 0x1.921fb54442d18p+2)))
(;; STDOUT ;;;
0000000: 01                                         ; WASM_SECTION_SIGNATURES
0000001: 01                                         ; num signatures
; signature 0
0000002: 00                                         ; num params
0000003: 00                                         ; result_type
0000004: 02                                         ; WASM_SECTION_FUNCTIONS
0000005: 01                                         ; num functions
; function 0
0000006: 01                                         ; func flags
0000007: 0000                                       ; func signature index
0000009: 0000 0000                                  ; func name offset
000000d: 0000                                       ; func body size
000000f: 09                                         ; OPCODE_I8_CONST
0000010: 00                                         ; u8 literal
0000011: 0a                                         ; OPCODE_I32_CONST
0000012: 0000 0080                                  ; u32 literal
0000016: 09                                         ; OPCODE_I8_CONST
0000017: ff                                         ; u8 literal
0000018: 0a                                         ; OPCODE_I32_CONST
0000019: 0000 0080                                  ; u32 literal
000001d: 09                                         ; OPCODE_I8_CONST
000001e: ff                                         ; u8 literal
000001f: 0b                                         ; OPCODE_I64_CONST
0000020: 0000 0000 0000 0000                        ; u64 literal
0000028: 0b                                         ; OPCODE_I64_CONST
0000029: 0000 0000 0000 0080                        ; u64 literal
0000031: 0b                                         ; OPCODE_I64_CONST
0000032: ffff ffff ffff ffff                        ; u64 literal
000003a: 0b                                         ; OPCODE_I64_CONST
000003b: 0000 0000 0000 0080                        ; u64 literal
0000043: 0b                                         ; OPCODE_I64_CONST
0000044: ffff ffff ffff ffff                        ; u64 literal
000004c: 0d                                         ; OPCODE_F32_CONST
000004d: 0000 0000                                  ; f32 literal
0000051: 0d                                         ; OPCODE_F32_CONST
0000052: 1668 a965                                  ; f32 literal
0000056: 0d                                         ; OPCODE_F32_CONST
0000057: 4020 4f37                                  ; f32 literal
000005b: 0d                                         ; OPCODE_F32_CONST
000005c: 0000 c07f                                  ; f32 literal
0000060: 0d                                         ; OPCODE_F32_CONST
0000061: 0000 c0ff                                  ; f32 literal
0000065: 0d                                         ; OPCODE_F32_CONST
0000066: 0000 c07f                                  ; f32 literal
000006a: 0d                                         ; OPCODE_F32_CONST
000006b: bc0a 807f                                  ; f32 literal
000006f: 0d                                         ; OPCODE_F32_CONST
0000070: bc0a 80ff                                  ; f32 literal
0000074: 0d                                         ; OPCODE_F32_CONST
0000075: bc0a 807f                                  ; f32 literal
0000079: 0d                                         ; OPCODE_F32_CONST
000007a: 0000 807f                                  ; f32 literal
000007e: 0d                                         ; OPCODE_F32_CONST
000007f: 0000 80ff                                  ; f32 literal
0000083: 0d                                         ; OPCODE_F32_CONST
0000084: 0000 807f                                  ; f32 literal
0000088: 0d                                         ; OPCODE_F32_CONST
0000089: 0000 00bf                                  ; f32 literal
000008d: 0d                                         ; OPCODE_F32_CONST
000008e: db0f c940                                  ; f32 literal
0000092: 0c                                         ; OPCODE_F64_CONST
0000093: 0000 0000 0000 0000                        ; f64 literal
000009b: 0c                                         ; OPCODE_F64_CONST
000009c: b856 0e3c dd9a efbf                        ; f64 literal
00000a4: 0c                                         ; OPCODE_F64_CONST
00000a5: 182d 4454 fb21 1940                        ; f64 literal
00000ad: 0c                                         ; OPCODE_F64_CONST
00000ae: 0000 0000 0000 f87f                        ; f64 literal
00000b6: 0c                                         ; OPCODE_F64_CONST
00000b7: 0000 0000 0000 f8ff                        ; f64 literal
00000bf: 0c                                         ; OPCODE_F64_CONST
00000c0: 0000 0000 0000 f87f                        ; f64 literal
00000c8: 0c                                         ; OPCODE_F64_CONST
00000c9: bc0a 0000 0000 f07f                        ; f64 literal
00000d1: 0c                                         ; OPCODE_F64_CONST
00000d2: bc0a 0000 0000 f0ff                        ; f64 literal
00000da: 0c                                         ; OPCODE_F64_CONST
00000db: bc0a 0000 0000 f07f                        ; f64 literal
00000e3: 0c                                         ; OPCODE_F64_CONST
00000e4: 0000 0000 0000 f07f                        ; f64 literal
00000ec: 0c                                         ; OPCODE_F64_CONST
00000ed: 0000 0000 0000 f0ff                        ; f64 literal
00000f5: 0c                                         ; OPCODE_F64_CONST
00000f6: 0000 0000 0000 f07f                        ; f64 literal
00000fe: 0c                                         ; OPCODE_F64_CONST
00000ff: 0000 0000 0000 e0bf                        ; f64 literal
0000107: 0c                                         ; OPCODE_F64_CONST
0000108: 182d 4454 fb21 1940                        ; f64 literal
000000d: 0101                                       ; FIXUP func body size
0000110: 06                                         ; WASM_SECTION_END
;;; STDOUT ;;)
