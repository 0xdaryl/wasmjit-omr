;;; FLAGS: -dv
(module
  (func
    (i32.load8_s align=1 (i32.const 0))
    (i32.load8_s align=2 (i32.const 0))
    (i32.load8_s align=4 (i32.const 0))
    (i32.load8_s align=8 (i32.const 0))

    (i32.load16_s align=1 (i32.const 0))
    (i32.load16_s align=2 (i32.const 0))
    (i32.load16_s align=4 (i32.const 0))
    (i32.load16_s align=8 (i32.const 0))

    (i32.load align=1 (i32.const 0))
    (i32.load align=2 (i32.const 0))
    (i32.load align=4 (i32.const 0))
    (i32.load align=8 (i32.const 0))

    (i64.load align=1 (i32.const 0))
    (i64.load align=2 (i32.const 0))
    (i64.load align=4 (i32.const 0))
    (i64.load align=8 (i32.const 0))

    (i64.load8_s align=1 (i32.const 0))
    (i64.load8_s align=2 (i32.const 0))
    (i64.load8_s align=4 (i32.const 0))
    (i64.load8_s align=8 (i32.const 0))

    (i64.load16_s align=1 (i32.const 0))
    (i64.load16_s align=2 (i32.const 0))
    (i64.load16_s align=4 (i32.const 0))
    (i64.load16_s align=8 (i32.const 0))

    (i64.load32_s align=1 (i32.const 0))
    (i64.load32_s align=2 (i32.const 0))
    (i64.load32_s align=4 (i32.const 0))
    (i64.load32_s align=8 (i32.const 0))))
(;; STDOUT ;;;
0000000: 00                                         ; WASM_SECTION_MEMORY
0000001: 00                                         ; min mem size log 2
0000002: 00                                         ; max mem size log 2
0000003: 01                                         ; export mem
0000004: 01                                         ; WASM_SECTION_SIGNATURES
0000005: 01                                         ; num signatures
; function signature 0
0000006: 00                                         ; num args
0000007: 00                                         ; result_type
0000008: 02                                         ; WASM_SECTION_FUNCTIONS
0000009: 01                                         ; num functions
; function 0
000000a: 01                                         ; func flags
000000b: 0000                                       ; func signature index
000000d: 0000 0000                                  ; func name offset
0000011: 0000                                       ; func body size
0000013: 20                                         ; OPCODE_I32_LOAD_I32
0000014: 04                                         ; load access byte
0000015: 10                                         ; OPCODE_I8_CONST
0000016: 00                                         ; u8 literal
0000017: 20                                         ; OPCODE_I32_LOAD_I32
0000018: 04                                         ; load access byte
0000019: 10                                         ; OPCODE_I8_CONST
000001a: 00                                         ; u8 literal
000001b: 20                                         ; OPCODE_I32_LOAD_I32
000001c: 04                                         ; load access byte
000001d: 10                                         ; OPCODE_I8_CONST
000001e: 00                                         ; u8 literal
000001f: 20                                         ; OPCODE_I32_LOAD_I32
0000020: 04                                         ; load access byte
0000021: 10                                         ; OPCODE_I8_CONST
0000022: 00                                         ; u8 literal
0000023: 20                                         ; OPCODE_I32_LOAD_I32
0000024: 05                                         ; load access byte
0000025: 10                                         ; OPCODE_I8_CONST
0000026: 00                                         ; u8 literal
0000027: 20                                         ; OPCODE_I32_LOAD_I32
0000028: 05                                         ; load access byte
0000029: 10                                         ; OPCODE_I8_CONST
000002a: 00                                         ; u8 literal
000002b: 20                                         ; OPCODE_I32_LOAD_I32
000002c: 05                                         ; load access byte
000002d: 10                                         ; OPCODE_I8_CONST
000002e: 00                                         ; u8 literal
000002f: 20                                         ; OPCODE_I32_LOAD_I32
0000030: 05                                         ; load access byte
0000031: 10                                         ; OPCODE_I8_CONST
0000032: 00                                         ; u8 literal
0000033: 20                                         ; OPCODE_I32_LOAD_I32
0000034: 06                                         ; load access byte
0000035: 10                                         ; OPCODE_I8_CONST
0000036: 00                                         ; u8 literal
0000037: 20                                         ; OPCODE_I32_LOAD_I32
0000038: 06                                         ; load access byte
0000039: 10                                         ; OPCODE_I8_CONST
000003a: 00                                         ; u8 literal
000003b: 20                                         ; OPCODE_I32_LOAD_I32
000003c: 06                                         ; load access byte
000003d: 10                                         ; OPCODE_I8_CONST
000003e: 00                                         ; u8 literal
000003f: 20                                         ; OPCODE_I32_LOAD_I32
0000040: 06                                         ; load access byte
0000041: 10                                         ; OPCODE_I8_CONST
0000042: 00                                         ; u8 literal
0000043: 21                                         ; OPCODE_I64_LOAD_I32
0000044: 07                                         ; load access byte
0000045: 10                                         ; OPCODE_I8_CONST
0000046: 00                                         ; u8 literal
0000047: 21                                         ; OPCODE_I64_LOAD_I32
0000048: 07                                         ; load access byte
0000049: 10                                         ; OPCODE_I8_CONST
000004a: 00                                         ; u8 literal
000004b: 21                                         ; OPCODE_I64_LOAD_I32
000004c: 07                                         ; load access byte
000004d: 10                                         ; OPCODE_I8_CONST
000004e: 00                                         ; u8 literal
000004f: 21                                         ; OPCODE_I64_LOAD_I32
0000050: 07                                         ; load access byte
0000051: 10                                         ; OPCODE_I8_CONST
0000052: 00                                         ; u8 literal
0000053: 21                                         ; OPCODE_I64_LOAD_I32
0000054: 04                                         ; load access byte
0000055: 10                                         ; OPCODE_I8_CONST
0000056: 00                                         ; u8 literal
0000057: 21                                         ; OPCODE_I64_LOAD_I32
0000058: 04                                         ; load access byte
0000059: 10                                         ; OPCODE_I8_CONST
000005a: 00                                         ; u8 literal
000005b: 21                                         ; OPCODE_I64_LOAD_I32
000005c: 04                                         ; load access byte
000005d: 10                                         ; OPCODE_I8_CONST
000005e: 00                                         ; u8 literal
000005f: 21                                         ; OPCODE_I64_LOAD_I32
0000060: 04                                         ; load access byte
0000061: 10                                         ; OPCODE_I8_CONST
0000062: 00                                         ; u8 literal
0000063: 21                                         ; OPCODE_I64_LOAD_I32
0000064: 05                                         ; load access byte
0000065: 10                                         ; OPCODE_I8_CONST
0000066: 00                                         ; u8 literal
0000067: 21                                         ; OPCODE_I64_LOAD_I32
0000068: 05                                         ; load access byte
0000069: 10                                         ; OPCODE_I8_CONST
000006a: 00                                         ; u8 literal
000006b: 21                                         ; OPCODE_I64_LOAD_I32
000006c: 05                                         ; load access byte
000006d: 10                                         ; OPCODE_I8_CONST
000006e: 00                                         ; u8 literal
000006f: 21                                         ; OPCODE_I64_LOAD_I32
0000070: 05                                         ; load access byte
0000071: 10                                         ; OPCODE_I8_CONST
0000072: 00                                         ; u8 literal
0000073: 21                                         ; OPCODE_I64_LOAD_I32
0000074: 06                                         ; load access byte
0000075: 10                                         ; OPCODE_I8_CONST
0000076: 00                                         ; u8 literal
0000077: 21                                         ; OPCODE_I64_LOAD_I32
0000078: 06                                         ; load access byte
0000079: 10                                         ; OPCODE_I8_CONST
000007a: 00                                         ; u8 literal
000007b: 21                                         ; OPCODE_I64_LOAD_I32
000007c: 06                                         ; load access byte
000007d: 10                                         ; OPCODE_I8_CONST
000007e: 00                                         ; u8 literal
000007f: 21                                         ; OPCODE_I64_LOAD_I32
0000080: 06                                         ; load access byte
0000081: 10                                         ; OPCODE_I8_CONST
0000082: 00                                         ; u8 literal
0000011: 7000                                       ; FIXUP func body size
0000083: 06                                         ; WASM_SECTION_END
; names
0000000: 0000 0001 0101 0000 0201 0100 0000 0000  ................
0000010: 0070 0020 0410 0020 0410 0020 0410 0020  .p. ... ... ... 
0000020: 0410 0020 0510 0020 0510 0020 0510 0020  ... ... ... ... 
0000030: 0510 0020 0610 0020 0610 0020 0610 0020  ... ... ... ... 
0000040: 0610 0021 0710 0021 0710 0021 0710 0021  ...!...!...!...!
0000050: 0710 0021 0410 0021 0410 0021 0410 0021  ...!...!...!...!
0000060: 0410 0021 0510 0021 0510 0021 0510 0021  ...!...!...!...!
0000070: 0510 0021 0610 0021 0610 0021 0610 0021  ...!...!...!...!
0000080: 0610 0006                                ....
;;; STDOUT ;;)
