;;; FLAGS: -dv
(module
  (func
    (i32.load8_s align=1 (i32.const 0))
    (i32.load8_s align=2 (i32.const 0))
    (i32.load8_s align=4 (i32.const 0))
    (i32.load8_s align=8 (i32.const 0))

    (i32.load16_s align=1 (i32.const 0))
    (i32.load16_s align=2 (i32.const 0))
    (i32.load16_s align=4 (i32.const 0))
    (i32.load16_s align=8 (i32.const 0))

    (i32.load align=1 (i32.const 0))
    (i32.load align=2 (i32.const 0))
    (i32.load align=4 (i32.const 0))
    (i32.load align=8 (i32.const 0))

    (i64.load align=1 (i32.const 0))
    (i64.load align=2 (i32.const 0))
    (i64.load align=4 (i32.const 0))
    (i64.load align=8 (i32.const 0))

    (i64.load8_s align=1 (i32.const 0))
    (i64.load8_s align=2 (i32.const 0))
    (i64.load8_s align=4 (i32.const 0))
    (i64.load8_s align=8 (i32.const 0))

    (i64.load16_s align=1 (i32.const 0))
    (i64.load16_s align=2 (i32.const 0))
    (i64.load16_s align=4 (i32.const 0))
    (i64.load16_s align=8 (i32.const 0))

    (i64.load32_s align=1 (i32.const 0))
    (i64.load32_s align=2 (i32.const 0))
    (i64.load32_s align=4 (i32.const 0))
    (i64.load32_s align=8 (i32.const 0))))
(;; STDOUT ;;;
0000000: 0061 736d                                  ; WASM_BINARY_MAGIC
0000004: 0a00 0000                                  ; WASM_BINARY_VERSION
0000008: 01                                         ; WASM_BINARY_SECTION_SIGNATURES
0000009: 01                                         ; num signatures
; signature 0
000000a: 00                                         ; num params
000000b: 00                                         ; result_type
000000c: 02                                         ; WASM_BINARY_SECTION_FUNCTIONS
000000d: 01                                         ; num functions
; function 0
000000e: 00                                         ; func flags
000000f: 0000                                       ; func signature index
0000011: 0000                                       ; func body size
0000013: 00                                         ; local decl count
0000014: 20                                         ; OPCODE_I32_LOAD_MEM8_S
0000015: 00                                         ; load access byte
0000016: 0a                                         ; OPCODE_I32_CONST
0000017: 00                                         ; i32 literal
0000018: 20                                         ; OPCODE_I32_LOAD_MEM8_S
0000019: 00                                         ; load access byte
000001a: 0a                                         ; OPCODE_I32_CONST
000001b: 00                                         ; i32 literal
000001c: 20                                         ; OPCODE_I32_LOAD_MEM8_S
000001d: 00                                         ; load access byte
000001e: 0a                                         ; OPCODE_I32_CONST
000001f: 00                                         ; i32 literal
0000020: 20                                         ; OPCODE_I32_LOAD_MEM8_S
0000021: 00                                         ; load access byte
0000022: 0a                                         ; OPCODE_I32_CONST
0000023: 00                                         ; i32 literal
0000024: 22                                         ; OPCODE_I32_LOAD_MEM16_S
0000025: 80                                         ; load access byte
0000026: 0a                                         ; OPCODE_I32_CONST
0000027: 00                                         ; i32 literal
0000028: 22                                         ; OPCODE_I32_LOAD_MEM16_S
0000029: 00                                         ; load access byte
000002a: 0a                                         ; OPCODE_I32_CONST
000002b: 00                                         ; i32 literal
000002c: 22                                         ; OPCODE_I32_LOAD_MEM16_S
000002d: 00                                         ; load access byte
000002e: 0a                                         ; OPCODE_I32_CONST
000002f: 00                                         ; i32 literal
0000030: 22                                         ; OPCODE_I32_LOAD_MEM16_S
0000031: 00                                         ; load access byte
0000032: 0a                                         ; OPCODE_I32_CONST
0000033: 00                                         ; i32 literal
0000034: 2a                                         ; OPCODE_I32_LOAD_MEM
0000035: 80                                         ; load access byte
0000036: 0a                                         ; OPCODE_I32_CONST
0000037: 00                                         ; i32 literal
0000038: 2a                                         ; OPCODE_I32_LOAD_MEM
0000039: 80                                         ; load access byte
000003a: 0a                                         ; OPCODE_I32_CONST
000003b: 00                                         ; i32 literal
000003c: 2a                                         ; OPCODE_I32_LOAD_MEM
000003d: 00                                         ; load access byte
000003e: 0a                                         ; OPCODE_I32_CONST
000003f: 00                                         ; i32 literal
0000040: 2a                                         ; OPCODE_I32_LOAD_MEM
0000041: 00                                         ; load access byte
0000042: 0a                                         ; OPCODE_I32_CONST
0000043: 00                                         ; i32 literal
0000044: 2b                                         ; OPCODE_I64_LOAD_MEM
0000045: 80                                         ; load access byte
0000046: 0a                                         ; OPCODE_I32_CONST
0000047: 00                                         ; i32 literal
0000048: 2b                                         ; OPCODE_I64_LOAD_MEM
0000049: 80                                         ; load access byte
000004a: 0a                                         ; OPCODE_I32_CONST
000004b: 00                                         ; i32 literal
000004c: 2b                                         ; OPCODE_I64_LOAD_MEM
000004d: 80                                         ; load access byte
000004e: 0a                                         ; OPCODE_I32_CONST
000004f: 00                                         ; i32 literal
0000050: 2b                                         ; OPCODE_I64_LOAD_MEM
0000051: 00                                         ; load access byte
0000052: 0a                                         ; OPCODE_I32_CONST
0000053: 00                                         ; i32 literal
0000054: 24                                         ; OPCODE_I64_LOAD_MEM8_S
0000055: 00                                         ; load access byte
0000056: 0a                                         ; OPCODE_I32_CONST
0000057: 00                                         ; i32 literal
0000058: 24                                         ; OPCODE_I64_LOAD_MEM8_S
0000059: 00                                         ; load access byte
000005a: 0a                                         ; OPCODE_I32_CONST
000005b: 00                                         ; i32 literal
000005c: 24                                         ; OPCODE_I64_LOAD_MEM8_S
000005d: 00                                         ; load access byte
000005e: 0a                                         ; OPCODE_I32_CONST
000005f: 00                                         ; i32 literal
0000060: 24                                         ; OPCODE_I64_LOAD_MEM8_S
0000061: 00                                         ; load access byte
0000062: 0a                                         ; OPCODE_I32_CONST
0000063: 00                                         ; i32 literal
0000064: 26                                         ; OPCODE_I64_LOAD_MEM16_S
0000065: 80                                         ; load access byte
0000066: 0a                                         ; OPCODE_I32_CONST
0000067: 00                                         ; i32 literal
0000068: 26                                         ; OPCODE_I64_LOAD_MEM16_S
0000069: 00                                         ; load access byte
000006a: 0a                                         ; OPCODE_I32_CONST
000006b: 00                                         ; i32 literal
000006c: 26                                         ; OPCODE_I64_LOAD_MEM16_S
000006d: 00                                         ; load access byte
000006e: 0a                                         ; OPCODE_I32_CONST
000006f: 00                                         ; i32 literal
0000070: 26                                         ; OPCODE_I64_LOAD_MEM16_S
0000071: 00                                         ; load access byte
0000072: 0a                                         ; OPCODE_I32_CONST
0000073: 00                                         ; i32 literal
0000074: 28                                         ; OPCODE_I64_LOAD_MEM32_S
0000075: 80                                         ; load access byte
0000076: 0a                                         ; OPCODE_I32_CONST
0000077: 00                                         ; i32 literal
0000078: 28                                         ; OPCODE_I64_LOAD_MEM32_S
0000079: 80                                         ; load access byte
000007a: 0a                                         ; OPCODE_I32_CONST
000007b: 00                                         ; i32 literal
000007c: 28                                         ; OPCODE_I64_LOAD_MEM32_S
000007d: 00                                         ; load access byte
000007e: 0a                                         ; OPCODE_I32_CONST
000007f: 00                                         ; i32 literal
0000080: 28                                         ; OPCODE_I64_LOAD_MEM32_S
0000081: 00                                         ; load access byte
0000082: 0a                                         ; OPCODE_I32_CONST
0000083: 00                                         ; i32 literal
0000011: 7100                                       ; FIXUP func body size
0000084: 06                                         ; WASM_BINARY_SECTION_END
;; dump
0000000: 0061 736d 0a00 0000 0101 0000 0201 0000  
0000010: 0071 0000 2000 0a00 2000 0a00 2000 0a00  
0000020: 2000 0a00 2280 0a00 2200 0a00 2200 0a00  
0000030: 2200 0a00 2a80 0a00 2a80 0a00 2a00 0a00  
0000040: 2a00 0a00 2b80 0a00 2b80 0a00 2b80 0a00  
0000050: 2b00 0a00 2400 0a00 2400 0a00 2400 0a00  
0000060: 2400 0a00 2680 0a00 2600 0a00 2600 0a00  
0000070: 2600 0a00 2880 0a00 2880 0a00 2800 0a00  
0000080: 2800 0a00 06                             
;;; STDOUT ;;)
